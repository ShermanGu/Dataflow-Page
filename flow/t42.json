{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]]"}, {"id": "1", "type": "stmt", "val": "output = `copy array`(input_grid)"}, {"id": "2", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]]"}, {"id": "4", "type": "val", "name": "i", "val": "0"}, {"id": "6", "type": "val", "name": "j", "val": "0"}, {"id": "7", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "9", "type": "val", "name": "j", "val": "1"}, {"id": "10", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "12", "type": "val", "name": "j", "val": "2"}, {"id": "13", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "15", "type": "val", "name": "j", "val": "3"}, {"id": "16", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "18", "type": "val", "name": "j", "val": "4"}, {"id": "19", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "21", "type": "val", "name": "j", "val": "5"}, {"id": "22", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "24", "type": "val", "name": "j", "val": "6"}, {"id": "25", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "27", "type": "val", "name": "j", "val": "7"}, {"id": "28", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "30", "type": "val", "name": "j", "val": "8"}, {"id": "31", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "33", "type": "val", "name": "j", "val": "9"}, {"id": "34", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "37", "type": "val", "name": "i", "val": "1"}, {"id": "39", "type": "val", "name": "j", "val": "0"}, {"id": "40", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "42", "type": "val", "name": "j", "val": "1"}, {"id": "43", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "45", "type": "val", "name": "j", "val": "2"}, {"id": "46", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "48", "type": "val", "name": "j", "val": "3"}, {"id": "49", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "51", "type": "val", "name": "j", "val": "4"}, {"id": "52", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "54", "type": "val", "name": "j", "val": "5"}, {"id": "55", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "57", "type": "val", "name": "j", "val": "6"}, {"id": "58", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "60", "type": "val", "name": "j", "val": "7"}, {"id": "61", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "63", "type": "val", "name": "j", "val": "8"}, {"id": "64", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "66", "type": "val", "name": "j", "val": "9"}, {"id": "67", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "70", "type": "val", "name": "i", "val": "2"}, {"id": "72", "type": "val", "name": "j", "val": "0"}, {"id": "73", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "74", "type": "stmt", "val": "`change this black block to red`(output, i, j)"}, {"id": "75", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]]"}, {"id": "77", "type": "val", "name": "j", "val": "1"}, {"id": "78", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "80", "type": "val", "name": "j", "val": "2"}, {"id": "81", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "82", "type": "stmt", "val": "`change this black block to red`(output, i, j)"}, {"id": "83", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]]"}, {"id": "85", "type": "val", "name": "j", "val": "3"}, {"id": "86", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "87", "type": "stmt", "val": "`change this black block to red`(output, i, j)"}, {"id": "88", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]]"}, {"id": "90", "type": "val", "name": "j", "val": "4"}, {"id": "91", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "93", "type": "val", "name": "j", "val": "5"}, {"id": "94", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "96", "type": "val", "name": "j", "val": "6"}, {"id": "97", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "98", "type": "stmt", "val": "`change this black block to red`(output, i, j)"}, {"id": "99", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 0 5]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]]"}, {"id": "101", "type": "val", "name": "j", "val": "7"}, {"id": "102", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "104", "type": "val", "name": "j", "val": "8"}, {"id": "105", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "106", "type": "stmt", "val": "`change this black block to red`(output, i, j)"}, {"id": "107", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]]"}, {"id": "109", "type": "val", "name": "j", "val": "9"}, {"id": "110", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "113", "type": "val", "name": "i", "val": "3"}, {"id": "115", "type": "val", "name": "j", "val": "0"}, {"id": "116", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "117", "type": "stmt", "val": "`change this black block to red`(output, i, j)"}, {"id": "118", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [2 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]]"}, {"id": "120", "type": "val", "name": "j", "val": "1"}, {"id": "121", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "123", "type": "val", "name": "j", "val": "2"}, {"id": "124", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "125", "type": "stmt", "val": "`change this black block to red`(output, i, j)"}, {"id": "126", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [2 0 2 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]]"}, {"id": "128", "type": "val", "name": "j", "val": "3"}, {"id": "129", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "130", "type": "stmt", "val": "`change this black block to red`(output, i, j)"}, {"id": "131", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [2 0 2 2 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]]"}, {"id": "133", "type": "val", "name": "j", "val": "4"}, {"id": "134", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "136", "type": "val", "name": "j", "val": "5"}, {"id": "137", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "139", "type": "val", "name": "j", "val": "6"}, {"id": "140", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "141", "type": "stmt", "val": "`change this black block to red`(output, i, j)"}, {"id": "142", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [2 0 2 2 0 0 2 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]]"}, {"id": "144", "type": "val", "name": "j", "val": "7"}, {"id": "145", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "147", "type": "val", "name": "j", "val": "8"}, {"id": "148", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "149", "type": "stmt", "val": "`change this black block to red`(output, i, j)"}, {"id": "150", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]]"}, {"id": "152", "type": "val", "name": "j", "val": "9"}, {"id": "153", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "156", "type": "val", "name": "i", "val": "4"}, {"id": "158", "type": "val", "name": "j", "val": "0"}, {"id": "159", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "161", "type": "val", "name": "j", "val": "1"}, {"id": "162", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "164", "type": "val", "name": "j", "val": "2"}, {"id": "165", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "167", "type": "val", "name": "j", "val": "3"}, {"id": "168", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "170", "type": "val", "name": "j", "val": "4"}, {"id": "171", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "173", "type": "val", "name": "j", "val": "5"}, {"id": "174", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "176", "type": "val", "name": "j", "val": "6"}, {"id": "177", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "179", "type": "val", "name": "j", "val": "7"}, {"id": "180", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "182", "type": "val", "name": "j", "val": "8"}, {"id": "183", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "185", "type": "val", "name": "j", "val": "9"}, {"id": "186", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "189", "type": "val", "name": "i", "val": "5"}, {"id": "191", "type": "val", "name": "j", "val": "0"}, {"id": "192", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "193", "type": "stmt", "val": "`change this black block to red`(output, i, j)"}, {"id": "194", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]]"}, {"id": "196", "type": "val", "name": "j", "val": "1"}, {"id": "197", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "199", "type": "val", "name": "j", "val": "2"}, {"id": "200", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "201", "type": "stmt", "val": "`change this black block to red`(output, i, j)"}, {"id": "202", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]]"}, {"id": "204", "type": "val", "name": "j", "val": "3"}, {"id": "205", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "206", "type": "stmt", "val": "`change this black block to red`(output, i, j)"}, {"id": "207", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]]"}, {"id": "209", "type": "val", "name": "j", "val": "4"}, {"id": "210", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "212", "type": "val", "name": "j", "val": "5"}, {"id": "213", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "215", "type": "val", "name": "j", "val": "6"}, {"id": "216", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "217", "type": "stmt", "val": "`change this black block to red`(output, i, j)"}, {"id": "218", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]]"}, {"id": "220", "type": "val", "name": "j", "val": "7"}, {"id": "221", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "223", "type": "val", "name": "j", "val": "8"}, {"id": "224", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "225", "type": "stmt", "val": "`change this black block to red`(output, i, j)"}, {"id": "226", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]]"}, {"id": "228", "type": "val", "name": "j", "val": "9"}, {"id": "229", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "232", "type": "val", "name": "i", "val": "6"}, {"id": "234", "type": "val", "name": "j", "val": "0"}, {"id": "235", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "237", "type": "val", "name": "j", "val": "1"}, {"id": "238", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "240", "type": "val", "name": "j", "val": "2"}, {"id": "241", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "243", "type": "val", "name": "j", "val": "3"}, {"id": "244", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "246", "type": "val", "name": "j", "val": "4"}, {"id": "247", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "249", "type": "val", "name": "j", "val": "5"}, {"id": "250", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "252", "type": "val", "name": "j", "val": "6"}, {"id": "253", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "255", "type": "val", "name": "j", "val": "7"}, {"id": "256", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "258", "type": "val", "name": "j", "val": "8"}, {"id": "259", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "261", "type": "val", "name": "j", "val": "9"}, {"id": "262", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "265", "type": "val", "name": "i", "val": "7"}, {"id": "267", "type": "val", "name": "j", "val": "0"}, {"id": "268", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "269", "type": "stmt", "val": "`change this black block to red`(output, i, j)"}, {"id": "270", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 0 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]]"}, {"id": "272", "type": "val", "name": "j", "val": "1"}, {"id": "273", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "275", "type": "val", "name": "j", "val": "2"}, {"id": "276", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "277", "type": "stmt", "val": "`change this black block to red`(output, i, j)"}, {"id": "278", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 0 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]]"}, {"id": "280", "type": "val", "name": "j", "val": "3"}, {"id": "281", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "282", "type": "stmt", "val": "`change this black block to red`(output, i, j)"}, {"id": "283", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 0 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]]"}, {"id": "285", "type": "val", "name": "j", "val": "4"}, {"id": "286", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "288", "type": "val", "name": "j", "val": "5"}, {"id": "289", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "291", "type": "val", "name": "j", "val": "6"}, {"id": "292", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "293", "type": "stmt", "val": "`change this black block to red`(output, i, j)"}, {"id": "294", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 0 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]]"}, {"id": "296", "type": "val", "name": "j", "val": "7"}, {"id": "297", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "299", "type": "val", "name": "j", "val": "8"}, {"id": "300", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "301", "type": "stmt", "val": "`change this black block to red`(output, i, j)"}, {"id": "302", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 5]]"}, {"id": "304", "type": "val", "name": "j", "val": "9"}, {"id": "305", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "308", "type": "val", "name": "i", "val": "8"}, {"id": "310", "type": "val", "name": "j", "val": "0"}, {"id": "311", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "313", "type": "val", "name": "j", "val": "1"}, {"id": "314", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "316", "type": "val", "name": "j", "val": "2"}, {"id": "317", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "319", "type": "val", "name": "j", "val": "3"}, {"id": "320", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "322", "type": "val", "name": "j", "val": "4"}, {"id": "323", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "325", "type": "val", "name": "j", "val": "5"}, {"id": "326", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "328", "type": "val", "name": "j", "val": "6"}, {"id": "329", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "331", "type": "val", "name": "j", "val": "7"}, {"id": "332", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "334", "type": "val", "name": "j", "val": "8"}, {"id": "335", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "337", "type": "val", "name": "j", "val": "9"}, {"id": "338", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "341", "type": "val", "name": "i", "val": "9"}, {"id": "343", "type": "val", "name": "j", "val": "0"}, {"id": "344", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "345", "type": "stmt", "val": "`change this black block to red`(output, i, j)"}, {"id": "346", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 0 0 0 0 0 0 0 5]]"}, {"id": "348", "type": "val", "name": "j", "val": "1"}, {"id": "349", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "351", "type": "val", "name": "j", "val": "2"}, {"id": "352", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "353", "type": "stmt", "val": "`change this black block to red`(output, i, j)"}, {"id": "354", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 0 0 0 0 0 0 5]]"}, {"id": "356", "type": "val", "name": "j", "val": "3"}, {"id": "357", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "358", "type": "stmt", "val": "`change this black block to red`(output, i, j)"}, {"id": "359", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 0 0 0 5]]"}, {"id": "361", "type": "val", "name": "j", "val": "4"}, {"id": "362", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "364", "type": "val", "name": "j", "val": "5"}, {"id": "365", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "367", "type": "val", "name": "j", "val": "6"}, {"id": "368", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "369", "type": "stmt", "val": "`change this black block to red`(output, i, j)"}, {"id": "370", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 0 5]]"}, {"id": "372", "type": "val", "name": "j", "val": "7"}, {"id": "373", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "375", "type": "val", "name": "j", "val": "8"}, {"id": "376", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "377", "type": "stmt", "val": "`change this black block to red`(output, i, j)"}, {"id": "378", "type": "val", "name": "output", "val": "[[5 0 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]\n [0 0 0 0 0 0 0 0 0 0]\n [2 0 2 2 0 0 2 0 2 5]]"}, {"id": "380", "type": "val", "name": "j", "val": "9"}, {"id": "381", "type": "stmt", "val": "if `the toppest one of this column and the most right one of this row both are grey`(input_grid, i, j):"}, {"id": "384", "type": "stmt", "val": "return output"}], "edges": [["0", "1"], ["1", "2"], ["6", "7"], ["4", "7"], ["0", "7"], ["9", "10"], ["4", "10"], ["0", "10"], ["12", "13"], ["4", "13"], ["0", "13"], ["15", "16"], ["4", "16"], ["0", "16"], ["18", "19"], ["4", "19"], ["0", "19"], ["21", "22"], ["4", "22"], ["0", "22"], ["24", "25"], ["4", "25"], ["0", "25"], ["27", "28"], ["4", "28"], ["0", "28"], ["30", "31"], ["4", "31"], ["0", "31"], ["33", "34"], ["4", "34"], ["0", "34"], ["39", "40"], ["37", "40"], ["0", "40"], ["42", "43"], ["37", "43"], ["0", "43"], ["45", "46"], ["37", "46"], ["0", "46"], ["48", "49"], ["37", "49"], ["0", "49"], ["51", "52"], ["37", "52"], ["0", "52"], ["54", "55"], ["37", "55"], ["0", "55"], ["57", "58"], ["37", "58"], ["0", "58"], ["60", "61"], ["37", "61"], ["0", "61"], ["63", "64"], ["37", "64"], ["0", "64"], ["66", "67"], ["37", "67"], ["0", "67"], ["72", "73"], ["70", "73"], ["0", "73"], ["2", "74"], ["72", "74"], ["70", "74"], ["74", "75"], ["77", "78"], ["70", "78"], ["0", "78"], ["80", "81"], ["70", "81"], ["0", "81"], ["75", "82"], ["80", "82"], ["70", "82"], ["82", "83"], ["85", "86"], ["70", "86"], ["0", "86"], ["83", "87"], ["85", "87"], ["70", "87"], ["87", "88"], ["90", "91"], ["70", "91"], ["0", "91"], ["93", "94"], ["70", "94"], ["0", "94"], ["96", "97"], ["70", "97"], ["0", "97"], ["88", "98"], ["96", "98"], ["70", "98"], ["98", "99"], ["101", "102"], ["70", "102"], ["0", "102"], ["104", "105"], ["70", "105"], ["0", "105"], ["99", "106"], ["104", "106"], ["70", "106"], ["106", "107"], ["109", "110"], ["70", "110"], ["0", "110"], ["115", "116"], ["113", "116"], ["0", "116"], ["107", "117"], ["115", "117"], ["113", "117"], ["117", "118"], ["120", "121"], ["113", "121"], ["0", "121"], ["123", "124"], ["113", "124"], ["0", "124"], ["118", "125"], ["123", "125"], ["113", "125"], ["125", "126"], ["128", "129"], ["113", "129"], ["0", "129"], ["126", "130"], ["128", "130"], ["113", "130"], ["130", "131"], ["133", "134"], ["113", "134"], ["0", "134"], ["136", "137"], ["113", "137"], ["0", "137"], ["139", "140"], ["113", "140"], ["0", "140"], ["131", "141"], ["139", "141"], ["113", "141"], ["141", "142"], ["144", "145"], ["113", "145"], ["0", "145"], ["147", "148"], ["113", "148"], ["0", "148"], ["142", "149"], ["147", "149"], ["113", "149"], ["149", "150"], ["152", "153"], ["113", "153"], ["0", "153"], ["158", "159"], ["156", "159"], ["0", "159"], ["161", "162"], ["156", "162"], ["0", "162"], ["164", "165"], ["156", "165"], ["0", "165"], ["167", "168"], ["156", "168"], ["0", "168"], ["170", "171"], ["156", "171"], ["0", "171"], ["173", "174"], ["156", "174"], ["0", "174"], ["176", "177"], ["156", "177"], ["0", "177"], ["179", "180"], ["156", "180"], ["0", "180"], ["182", "183"], ["156", "183"], ["0", "183"], ["185", "186"], ["156", "186"], ["0", "186"], ["191", "192"], ["189", "192"], ["0", "192"], ["150", "193"], ["191", "193"], ["189", "193"], ["193", "194"], ["196", "197"], ["189", "197"], ["0", "197"], ["199", "200"], ["189", "200"], ["0", "200"], ["194", "201"], ["199", "201"], ["189", "201"], ["201", "202"], ["204", "205"], ["189", "205"], ["0", "205"], ["202", "206"], ["204", "206"], ["189", "206"], ["206", "207"], ["209", "210"], ["189", "210"], ["0", "210"], ["212", "213"], ["189", "213"], ["0", "213"], ["215", "216"], ["189", "216"], ["0", "216"], ["207", "217"], ["215", "217"], ["189", "217"], ["217", "218"], ["220", "221"], ["189", "221"], ["0", "221"], ["223", "224"], ["189", "224"], ["0", "224"], ["218", "225"], ["223", "225"], ["189", "225"], ["225", "226"], ["228", "229"], ["189", "229"], ["0", "229"], ["234", "235"], ["232", "235"], ["0", "235"], ["237", "238"], ["232", "238"], ["0", "238"], ["240", "241"], ["232", "241"], ["0", "241"], ["243", "244"], ["232", "244"], ["0", "244"], ["246", "247"], ["232", "247"], ["0", "247"], ["249", "250"], ["232", "250"], ["0", "250"], ["252", "253"], ["232", "253"], ["0", "253"], ["255", "256"], ["232", "256"], ["0", "256"], ["258", "259"], ["232", "259"], ["0", "259"], ["261", "262"], ["232", "262"], ["0", "262"], ["267", "268"], ["265", "268"], ["0", "268"], ["226", "269"], ["267", "269"], ["265", "269"], ["269", "270"], ["272", "273"], ["265", "273"], ["0", "273"], ["275", "276"], ["265", "276"], ["0", "276"], ["270", "277"], ["275", "277"], ["265", "277"], ["277", "278"], ["280", "281"], ["265", "281"], ["0", "281"], ["278", "282"], ["280", "282"], ["265", "282"], ["282", "283"], ["285", "286"], ["265", "286"], ["0", "286"], ["288", "289"], ["265", "289"], ["0", "289"], ["291", "292"], ["265", "292"], ["0", "292"], ["283", "293"], ["291", "293"], ["265", "293"], ["293", "294"], ["296", "297"], ["265", "297"], ["0", "297"], ["299", "300"], ["265", "300"], ["0", "300"], ["294", "301"], ["299", "301"], ["265", "301"], ["301", "302"], ["304", "305"], ["265", "305"], ["0", "305"], ["310", "311"], ["308", "311"], ["0", "311"], ["313", "314"], ["308", "314"], ["0", "314"], ["316", "317"], ["308", "317"], ["0", "317"], ["319", "320"], ["308", "320"], ["0", "320"], ["322", "323"], ["308", "323"], ["0", "323"], ["325", "326"], ["308", "326"], ["0", "326"], ["328", "329"], ["308", "329"], ["0", "329"], ["331", "332"], ["308", "332"], ["0", "332"], ["334", "335"], ["308", "335"], ["0", "335"], ["337", "338"], ["308", "338"], ["0", "338"], ["343", "344"], ["341", "344"], ["0", "344"], ["302", "345"], ["343", "345"], ["341", "345"], ["345", "346"], ["348", "349"], ["341", "349"], ["0", "349"], ["351", "352"], ["341", "352"], ["0", "352"], ["346", "353"], ["351", "353"], ["341", "353"], ["353", "354"], ["356", "357"], ["341", "357"], ["0", "357"], ["354", "358"], ["356", "358"], ["341", "358"], ["358", "359"], ["361", "362"], ["341", "362"], ["0", "362"], ["364", "365"], ["341", "365"], ["0", "365"], ["367", "368"], ["341", "368"], ["0", "368"], ["359", "369"], ["367", "369"], ["341", "369"], ["369", "370"], ["372", "373"], ["341", "373"], ["0", "373"], ["375", "376"], ["341", "376"], ["0", "376"], ["370", "377"], ["375", "377"], ["341", "377"], ["377", "378"], ["380", "381"], ["341", "381"], ["0", "381"], ["378", "384"]]}