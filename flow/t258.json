{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[1 1 1 1 1 1]\n [1 1 1 1 1 1]\n [1 1 1 2 1 1]\n [1 1 2 3 1 1]\n [1 1 1 1 1 1]\n [1 1 1 1 1 1]]"}, {"id": "2", "type": "val", "name": "output_grid", "val": "[[1 1 1 1 1 1]\n [1 1 1 1 1 1]\n [1 1 1 2 1 1]\n [1 1 2 3 1 1]\n [1 1 1 1 1 1]\n [1 1 1 1 1 1]]"}, {"id": "3", "type": "stmt", "val": "(upper_left, lower_right) = `find the upper right corner and the lower left corner of non-blue pixels in input_grid`(input_grid)"}, {"id": "4", "type": "val", "name": "upper_left", "val": "(2, 2)"}, {"id": "5", "type": "val", "name": "lower_right", "val": "(3, 3)"}, {"id": "6", "type": "stmt", "val": "output_grid = `output pixels from upper_left ro lower_right in input_grid, the output shape should be(2,2)`(upper_left, lower_right, input_grid)"}, {"id": "7", "type": "val", "name": "output_grid", "val": "[[1 2]\n [2 3]]"}, {"id": "8", "type": "stmt", "val": "output_grid = `make blue pixels black`(output_grid)"}, {"id": "9", "type": "val", "name": "output_grid", "val": "[[0 2]\n [2 3]]"}, {"id": "10", "type": "stmt", "val": "return output_grid"}], "edges": [["0", "3"], ["3", "4"], ["3", "5"], ["4", "6"], ["2", "6"], ["5", "6"], ["0", "6"], ["6", "7"], ["7", "8"], ["8", "9"], ["9", "10"]]}