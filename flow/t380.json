{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[2 2 2 0 0 0 0 0 0 0]\n [2 2 2 0 0 0 2 2 2 2]\n [0 0 0 0 0 0 2 2 2 2]\n [0 2 2 2 0 0 2 2 2 2]\n [0 2 2 2 0 0 0 0 0 0]\n [0 2 2 2 0 2 2 2 2 0]\n [0 2 2 2 0 2 2 2 2 0]\n [0 2 2 2 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}, {"id": "2", "type": "val", "name": "i", "val": "0"}, {"id": "4", "type": "val", "name": "j", "val": "0"}, {"id": "5", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "7", "type": "val", "name": "j", "val": "1"}, {"id": "8", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "10", "type": "val", "name": "j", "val": "2"}, {"id": "11", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "13", "type": "val", "name": "j", "val": "3"}, {"id": "14", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "16", "type": "val", "name": "j", "val": "4"}, {"id": "17", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "19", "type": "val", "name": "j", "val": "5"}, {"id": "20", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "22", "type": "val", "name": "j", "val": "6"}, {"id": "23", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "25", "type": "val", "name": "j", "val": "7"}, {"id": "26", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "28", "type": "val", "name": "j", "val": "8"}, {"id": "29", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "31", "type": "val", "name": "j", "val": "9"}, {"id": "32", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "35", "type": "val", "name": "i", "val": "1"}, {"id": "37", "type": "val", "name": "j", "val": "0"}, {"id": "38", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "40", "type": "val", "name": "j", "val": "1"}, {"id": "41", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "43", "type": "val", "name": "j", "val": "2"}, {"id": "44", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "46", "type": "val", "name": "j", "val": "3"}, {"id": "47", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "48", "type": "stmt", "val": "input_grid = `color this point to maroon`(input_grid, i, j)"}, {"id": "49", "type": "val", "name": "input_grid", "val": "[[2 2 2 0 0 0 0 0 0 0]\n [2 2 2 9 0 0 2 2 2 2]\n [0 0 0 0 0 0 2 2 2 2]\n [0 2 2 2 0 0 2 2 2 2]\n [0 2 2 2 0 0 0 0 0 0]\n [0 2 2 2 0 2 2 2 2 0]\n [0 2 2 2 0 2 2 2 2 0]\n [0 2 2 2 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}, {"id": "51", "type": "val", "name": "j", "val": "4"}, {"id": "52", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "53", "type": "stmt", "val": "input_grid = `color this point to maroon`(input_grid, i, j)"}, {"id": "54", "type": "val", "name": "input_grid", "val": "[[2 2 2 0 0 0 0 0 0 0]\n [2 2 2 9 9 0 2 2 2 2]\n [0 0 0 0 0 0 2 2 2 2]\n [0 2 2 2 0 0 2 2 2 2]\n [0 2 2 2 0 0 0 0 0 0]\n [0 2 2 2 0 2 2 2 2 0]\n [0 2 2 2 0 2 2 2 2 0]\n [0 2 2 2 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}, {"id": "56", "type": "val", "name": "j", "val": "5"}, {"id": "57", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "58", "type": "stmt", "val": "input_grid = `color this point to maroon`(input_grid, i, j)"}, {"id": "59", "type": "val", "name": "input_grid", "val": "[[2 2 2 0 0 0 0 0 0 0]\n [2 2 2 9 9 9 2 2 2 2]\n [0 0 0 0 0 0 2 2 2 2]\n [0 2 2 2 0 0 2 2 2 2]\n [0 2 2 2 0 0 0 0 0 0]\n [0 2 2 2 0 2 2 2 2 0]\n [0 2 2 2 0 2 2 2 2 0]\n [0 2 2 2 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}, {"id": "61", "type": "val", "name": "j", "val": "6"}, {"id": "62", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "64", "type": "val", "name": "j", "val": "7"}, {"id": "65", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "67", "type": "val", "name": "j", "val": "8"}, {"id": "68", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "70", "type": "val", "name": "j", "val": "9"}, {"id": "71", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "74", "type": "val", "name": "i", "val": "2"}, {"id": "76", "type": "val", "name": "j", "val": "0"}, {"id": "77", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "79", "type": "val", "name": "j", "val": "1"}, {"id": "80", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "82", "type": "val", "name": "j", "val": "2"}, {"id": "83", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "85", "type": "val", "name": "j", "val": "3"}, {"id": "86", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "88", "type": "val", "name": "j", "val": "4"}, {"id": "89", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "91", "type": "val", "name": "j", "val": "5"}, {"id": "92", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "94", "type": "val", "name": "j", "val": "6"}, {"id": "95", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "97", "type": "val", "name": "j", "val": "7"}, {"id": "98", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "100", "type": "val", "name": "j", "val": "8"}, {"id": "101", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "103", "type": "val", "name": "j", "val": "9"}, {"id": "104", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "107", "type": "val", "name": "i", "val": "3"}, {"id": "109", "type": "val", "name": "j", "val": "0"}, {"id": "110", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "112", "type": "val", "name": "j", "val": "1"}, {"id": "113", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "115", "type": "val", "name": "j", "val": "2"}, {"id": "116", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "118", "type": "val", "name": "j", "val": "3"}, {"id": "119", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "121", "type": "val", "name": "j", "val": "4"}, {"id": "122", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "123", "type": "stmt", "val": "input_grid = `color this point to maroon`(input_grid, i, j)"}, {"id": "124", "type": "val", "name": "input_grid", "val": "[[2 2 2 0 0 0 0 0 0 0]\n [2 2 2 9 9 9 2 2 2 2]\n [0 0 0 0 0 0 2 2 2 2]\n [0 2 2 2 9 0 2 2 2 2]\n [0 2 2 2 0 0 0 0 0 0]\n [0 2 2 2 0 2 2 2 2 0]\n [0 2 2 2 0 2 2 2 2 0]\n [0 2 2 2 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}, {"id": "126", "type": "val", "name": "j", "val": "5"}, {"id": "127", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "128", "type": "stmt", "val": "input_grid = `color this point to maroon`(input_grid, i, j)"}, {"id": "129", "type": "val", "name": "input_grid", "val": "[[2 2 2 0 0 0 0 0 0 0]\n [2 2 2 9 9 9 2 2 2 2]\n [0 0 0 0 0 0 2 2 2 2]\n [0 2 2 2 9 9 2 2 2 2]\n [0 2 2 2 0 0 0 0 0 0]\n [0 2 2 2 0 2 2 2 2 0]\n [0 2 2 2 0 2 2 2 2 0]\n [0 2 2 2 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}, {"id": "131", "type": "val", "name": "j", "val": "6"}, {"id": "132", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "134", "type": "val", "name": "j", "val": "7"}, {"id": "135", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "137", "type": "val", "name": "j", "val": "8"}, {"id": "138", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "140", "type": "val", "name": "j", "val": "9"}, {"id": "141", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "144", "type": "val", "name": "i", "val": "4"}, {"id": "146", "type": "val", "name": "j", "val": "0"}, {"id": "147", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "149", "type": "val", "name": "j", "val": "1"}, {"id": "150", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "152", "type": "val", "name": "j", "val": "2"}, {"id": "153", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "155", "type": "val", "name": "j", "val": "3"}, {"id": "156", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "158", "type": "val", "name": "j", "val": "4"}, {"id": "159", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "161", "type": "val", "name": "j", "val": "5"}, {"id": "162", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "164", "type": "val", "name": "j", "val": "6"}, {"id": "165", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "167", "type": "val", "name": "j", "val": "7"}, {"id": "168", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "170", "type": "val", "name": "j", "val": "8"}, {"id": "171", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "173", "type": "val", "name": "j", "val": "9"}, {"id": "174", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "177", "type": "val", "name": "i", "val": "5"}, {"id": "179", "type": "val", "name": "j", "val": "0"}, {"id": "180", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "182", "type": "val", "name": "j", "val": "1"}, {"id": "183", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "185", "type": "val", "name": "j", "val": "2"}, {"id": "186", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "188", "type": "val", "name": "j", "val": "3"}, {"id": "189", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "191", "type": "val", "name": "j", "val": "4"}, {"id": "192", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "193", "type": "stmt", "val": "input_grid = `color this point to maroon`(input_grid, i, j)"}, {"id": "194", "type": "val", "name": "input_grid", "val": "[[2 2 2 0 0 0 0 0 0 0]\n [2 2 2 9 9 9 2 2 2 2]\n [0 0 0 0 0 0 2 2 2 2]\n [0 2 2 2 9 9 2 2 2 2]\n [0 2 2 2 0 0 0 0 0 0]\n [0 2 2 2 9 2 2 2 2 0]\n [0 2 2 2 0 2 2 2 2 0]\n [0 2 2 2 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}, {"id": "196", "type": "val", "name": "j", "val": "5"}, {"id": "197", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "199", "type": "val", "name": "j", "val": "6"}, {"id": "200", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "202", "type": "val", "name": "j", "val": "7"}, {"id": "203", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "205", "type": "val", "name": "j", "val": "8"}, {"id": "206", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "208", "type": "val", "name": "j", "val": "9"}, {"id": "209", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "212", "type": "val", "name": "i", "val": "6"}, {"id": "214", "type": "val", "name": "j", "val": "0"}, {"id": "215", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "217", "type": "val", "name": "j", "val": "1"}, {"id": "218", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "220", "type": "val", "name": "j", "val": "2"}, {"id": "221", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "223", "type": "val", "name": "j", "val": "3"}, {"id": "224", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "226", "type": "val", "name": "j", "val": "4"}, {"id": "227", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "228", "type": "stmt", "val": "input_grid = `color this point to maroon`(input_grid, i, j)"}, {"id": "229", "type": "val", "name": "input_grid", "val": "[[2 2 2 0 0 0 0 0 0 0]\n [2 2 2 9 9 9 2 2 2 2]\n [0 0 0 0 0 0 2 2 2 2]\n [0 2 2 2 9 9 2 2 2 2]\n [0 2 2 2 0 0 0 0 0 0]\n [0 2 2 2 9 2 2 2 2 0]\n [0 2 2 2 9 2 2 2 2 0]\n [0 2 2 2 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}, {"id": "231", "type": "val", "name": "j", "val": "5"}, {"id": "232", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "234", "type": "val", "name": "j", "val": "6"}, {"id": "235", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "237", "type": "val", "name": "j", "val": "7"}, {"id": "238", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "240", "type": "val", "name": "j", "val": "8"}, {"id": "241", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "243", "type": "val", "name": "j", "val": "9"}, {"id": "244", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "247", "type": "val", "name": "i", "val": "7"}, {"id": "249", "type": "val", "name": "j", "val": "0"}, {"id": "250", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "252", "type": "val", "name": "j", "val": "1"}, {"id": "253", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "255", "type": "val", "name": "j", "val": "2"}, {"id": "256", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "258", "type": "val", "name": "j", "val": "3"}, {"id": "259", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "261", "type": "val", "name": "j", "val": "4"}, {"id": "262", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "264", "type": "val", "name": "j", "val": "5"}, {"id": "265", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "267", "type": "val", "name": "j", "val": "6"}, {"id": "268", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "270", "type": "val", "name": "j", "val": "7"}, {"id": "271", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "273", "type": "val", "name": "j", "val": "8"}, {"id": "274", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "276", "type": "val", "name": "j", "val": "9"}, {"id": "277", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "280", "type": "val", "name": "i", "val": "8"}, {"id": "282", "type": "val", "name": "j", "val": "0"}, {"id": "283", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "285", "type": "val", "name": "j", "val": "1"}, {"id": "286", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "288", "type": "val", "name": "j", "val": "2"}, {"id": "289", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "291", "type": "val", "name": "j", "val": "3"}, {"id": "292", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "294", "type": "val", "name": "j", "val": "4"}, {"id": "295", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "297", "type": "val", "name": "j", "val": "5"}, {"id": "298", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "300", "type": "val", "name": "j", "val": "6"}, {"id": "301", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "303", "type": "val", "name": "j", "val": "7"}, {"id": "304", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "306", "type": "val", "name": "j", "val": "8"}, {"id": "307", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "309", "type": "val", "name": "j", "val": "9"}, {"id": "310", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "313", "type": "val", "name": "i", "val": "9"}, {"id": "315", "type": "val", "name": "j", "val": "0"}, {"id": "316", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "318", "type": "val", "name": "j", "val": "1"}, {"id": "319", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "321", "type": "val", "name": "j", "val": "2"}, {"id": "322", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "324", "type": "val", "name": "j", "val": "3"}, {"id": "325", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "327", "type": "val", "name": "j", "val": "4"}, {"id": "328", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "330", "type": "val", "name": "j", "val": "5"}, {"id": "331", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "333", "type": "val", "name": "j", "val": "6"}, {"id": "334", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "336", "type": "val", "name": "j", "val": "7"}, {"id": "337", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "339", "type": "val", "name": "j", "val": "8"}, {"id": "340", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "342", "type": "val", "name": "j", "val": "9"}, {"id": "343", "type": "stmt", "val": "if `you get a grid and a point. First you should check if this point is black.If it's black,you should check if there are red point in left direction and right direction at the same time. These red points do not necessarily need to be adjacent, just need be on the same row. `(input_grid, i, j):"}, {"id": "346", "type": "stmt", "val": "return input_grid"}], "edges": [["4", "5"], ["2", "5"], ["0", "5"], ["7", "8"], ["2", "8"], ["0", "8"], ["10", "11"], ["2", "11"], ["0", "11"], ["13", "14"], ["2", "14"], ["0", "14"], ["16", "17"], ["2", "17"], ["0", "17"], ["19", "20"], ["2", "20"], ["0", "20"], ["22", "23"], ["2", "23"], ["0", "23"], ["25", "26"], ["2", "26"], ["0", "26"], ["28", "29"], ["2", "29"], ["0", "29"], ["31", "32"], ["2", "32"], ["0", "32"], ["37", "38"], ["35", "38"], ["0", "38"], ["40", "41"], ["35", "41"], ["0", "41"], ["43", "44"], ["35", "44"], ["0", "44"], ["46", "47"], ["35", "47"], ["0", "47"], ["46", "48"], ["35", "48"], ["0", "48"], ["48", "49"], ["51", "52"], ["35", "52"], ["49", "52"], ["51", "53"], ["35", "53"], ["49", "53"], ["53", "54"], ["56", "57"], ["35", "57"], ["54", "57"], ["56", "58"], ["35", "58"], ["54", "58"], ["58", "59"], ["61", "62"], ["35", "62"], ["59", "62"], ["64", "65"], ["35", "65"], ["59", "65"], ["67", "68"], ["35", "68"], ["59", "68"], ["70", "71"], ["35", "71"], ["59", "71"], ["76", "77"], ["74", "77"], ["59", "77"], ["79", "80"], ["74", "80"], ["59", "80"], ["82", "83"], ["74", "83"], ["59", "83"], ["85", "86"], ["74", "86"], ["59", "86"], ["88", "89"], ["74", "89"], ["59", "89"], ["91", "92"], ["74", "92"], ["59", "92"], ["94", "95"], ["74", "95"], ["59", "95"], ["97", "98"], ["74", "98"], ["59", "98"], ["100", "101"], ["74", "101"], ["59", "101"], ["103", "104"], ["74", "104"], ["59", "104"], ["109", "110"], ["107", "110"], ["59", "110"], ["112", "113"], ["107", "113"], ["59", "113"], ["115", "116"], ["107", "116"], ["59", "116"], ["118", "119"], ["107", "119"], ["59", "119"], ["121", "122"], ["107", "122"], ["59", "122"], ["121", "123"], ["107", "123"], ["59", "123"], ["123", "124"], ["126", "127"], ["107", "127"], ["124", "127"], ["126", "128"], ["107", "128"], ["124", "128"], ["128", "129"], ["131", "132"], ["107", "132"], ["129", "132"], ["134", "135"], ["107", "135"], ["129", "135"], ["137", "138"], ["107", "138"], ["129", "138"], ["140", "141"], ["107", "141"], ["129", "141"], ["146", "147"], ["144", "147"], ["129", "147"], ["149", "150"], ["144", "150"], ["129", "150"], ["152", "153"], ["144", "153"], ["129", "153"], ["155", "156"], ["144", "156"], ["129", "156"], ["158", "159"], ["144", "159"], ["129", "159"], ["161", "162"], ["144", "162"], ["129", "162"], ["164", "165"], ["144", "165"], ["129", "165"], ["167", "168"], ["144", "168"], ["129", "168"], ["170", "171"], ["144", "171"], ["129", "171"], ["173", "174"], ["144", "174"], ["129", "174"], ["179", "180"], ["177", "180"], ["129", "180"], ["182", "183"], ["177", "183"], ["129", "183"], ["185", "186"], ["177", "186"], ["129", "186"], ["188", "189"], ["177", "189"], ["129", "189"], ["191", "192"], ["177", "192"], ["129", "192"], ["191", "193"], ["177", "193"], ["129", "193"], ["193", "194"], ["196", "197"], ["177", "197"], ["194", "197"], ["199", "200"], ["177", "200"], ["194", "200"], ["202", "203"], ["177", "203"], ["194", "203"], ["205", "206"], ["177", "206"], ["194", "206"], ["208", "209"], ["177", "209"], ["194", "209"], ["214", "215"], ["212", "215"], ["194", "215"], ["217", "218"], ["212", "218"], ["194", "218"], ["220", "221"], ["212", "221"], ["194", "221"], ["223", "224"], ["212", "224"], ["194", "224"], ["226", "227"], ["212", "227"], ["194", "227"], ["226", "228"], ["212", "228"], ["194", "228"], ["228", "229"], ["231", "232"], ["212", "232"], ["229", "232"], ["234", "235"], ["212", "235"], ["229", "235"], ["237", "238"], ["212", "238"], ["229", "238"], ["240", "241"], ["212", "241"], ["229", "241"], ["243", "244"], ["212", "244"], ["229", "244"], ["249", "250"], ["247", "250"], ["229", "250"], ["252", "253"], ["247", "253"], ["229", "253"], ["255", "256"], ["247", "256"], ["229", "256"], ["258", "259"], ["247", "259"], ["229", "259"], ["261", "262"], ["247", "262"], ["229", "262"], ["264", "265"], ["247", "265"], ["229", "265"], ["267", "268"], ["247", "268"], ["229", "268"], ["270", "271"], ["247", "271"], ["229", "271"], ["273", "274"], ["247", "274"], ["229", "274"], ["276", "277"], ["247", "277"], ["229", "277"], ["282", "283"], ["280", "283"], ["229", "283"], ["285", "286"], ["280", "286"], ["229", "286"], ["288", "289"], ["280", "289"], ["229", "289"], ["291", "292"], ["280", "292"], ["229", "292"], ["294", "295"], ["280", "295"], ["229", "295"], ["297", "298"], ["280", "298"], ["229", "298"], ["300", "301"], ["280", "301"], ["229", "301"], ["303", "304"], ["280", "304"], ["229", "304"], ["306", "307"], ["280", "307"], ["229", "307"], ["309", "310"], ["280", "310"], ["229", "310"], ["315", "316"], ["313", "316"], ["229", "316"], ["318", "319"], ["313", "319"], ["229", "319"], ["321", "322"], ["313", "322"], ["229", "322"], ["324", "325"], ["313", "325"], ["229", "325"], ["327", "328"], ["313", "328"], ["229", "328"], ["330", "331"], ["313", "331"], ["229", "331"], ["333", "334"], ["313", "334"], ["229", "334"], ["336", "337"], ["313", "337"], ["229", "337"], ["339", "340"], ["313", "340"], ["229", "340"], ["342", "343"], ["313", "343"], ["229", "343"], ["229", "346"]]}