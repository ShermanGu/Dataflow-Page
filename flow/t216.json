{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0]\n [2 0 0 0 0 0 0 0 0]\n [2 2 0 0 0 0 0 0 0]\n [0 2 2 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0]]"}, {"id": "1", "type": "stmt", "val": "squares = `split the 9x9 grid into 9 3x3 small squares`(input_grid)"}, {"id": "6", "type": "val", "name": "square", "val": "[[0 0 0]\n [0 0 0]\n [0 0 0]]"}, {"id": "7", "type": "stmt", "val": "if `has_color_pixel`(square):"}, {"id": "9", "type": "stmt", "val": "if `has_color_pixel`(square):"}, {"id": "11", "type": "stmt", "val": "if `has_color_pixel`(square):"}, {"id": "13", "type": "val", "name": "square", "val": "[[2 0 0]\n [2 2 0]\n [0 2 2]]"}, {"id": "14", "type": "stmt", "val": "if `has_color_pixel`(square):"}, {"id": "16", "type": "val", "name": "colorful_square", "val": "[[2 0 0]\n [2 2 0]\n [0 2 2]]"}, {"id": "18", "type": "val", "name": "square", "val": "[[0 0 0]\n [0 0 0]\n [0 0 0]]"}, {"id": "19", "type": "stmt", "val": "if `has_color_pixel`(square):"}, {"id": "21", "type": "stmt", "val": "if `has_color_pixel`(square):"}, {"id": "23", "type": "stmt", "val": "if `has_color_pixel`(square):"}, {"id": "25", "type": "stmt", "val": "if `has_color_pixel`(square):"}, {"id": "27", "type": "stmt", "val": "if `has_color_pixel`(square):"}, {"id": "29", "type": "stmt", "val": "output_grid = `map 3x3 grid to a 9x9 grid, if (i, j) in 3x3 grid is black, then (3*i, 3*j) in 9x9 grid is black, otherwise copy the 3x3 grid to (3*i, 3*j)`(colorful_square)"}, {"id": "30", "type": "val", "name": "output_grid", "val": "[[2. 0. 0. 0. 0. 0. 0. 0. 0.]\n [2. 2. 0. 0. 0. 0. 0. 0. 0.]\n [0. 2. 2. 0. 0. 0. 0. 0. 0.]\n [2. 0. 0. 2. 0. 0. 0. 0. 0.]\n [2. 2. 0. 2. 2. 0. 0. 0. 0.]\n [0. 2. 2. 0. 2. 2. 0. 0. 0.]\n [0. 0. 0. 2. 0. 0. 2. 0. 0.]\n [0. 0. 0. 2. 2. 0. 2. 2. 0.]\n [0. 0. 0. 0. 2. 2. 0. 2. 2.]]"}, {"id": "31", "type": "stmt", "val": "return output_grid"}], "edges": [["0", "1"], ["6", "7"], ["6", "9"], ["6", "11"], ["13", "14"], ["18", "19"], ["18", "21"], ["18", "23"], ["18", "25"], ["18", "27"], ["16", "29"], ["29", "30"], ["30", "31"]]}