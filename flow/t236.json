{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 0 8 0 0 0 0]\n [0 0 0 0 0 0 0 0]\n [0 0 7 0 0 0 0 0]\n [0 0 0 0 0 0 0 0]\n [0 0 0 0 0 2 0 0]\n [0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0]]"}, {"id": "1", "type": "stmt", "val": "output_grid = `same size as input and element all black`(input_grid)"}, {"id": "2", "type": "val", "name": "output_grid", "val": "[[0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0]]"}, {"id": "6", "type": "val", "name": "index", "val": "0"}, {"id": "7", "type": "val", "name": "line", "val": "[0 0 0 8 0 0 0 0]"}, {"id": "8", "type": "stmt", "val": "(pos, color) = `find the element in input where is not black, output is position and corresponding element color and if there is no non black element, return None`(line)"}, {"id": "9", "type": "val", "name": "pos", "val": "3"}, {"id": "10", "type": "val", "name": "color", "val": "8"}, {"id": "12", "type": "stmt", "val": "output_line = `output is the same size as input line, but index less than input pos is black and index more than or equal to input pos is color`(line, pos, color)"}, {"id": "13", "type": "val", "name": "output_line", "val": "[0 0 0 8 8 8 8 8]"}, {"id": "15", "type": "val", "name": "last_color", "val": "8"}, {"id": "16", "type": "stmt", "val": "output_grid = `change the line in output_grid to output_line in index`(output_grid, output_line, index)"}, {"id": "17", "type": "val", "name": "output_grid", "val": "[[0 0 0 8 8 8 8 8]\n [0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0]]"}, {"id": "19", "type": "val", "name": "index", "val": "1"}, {"id": "20", "type": "val", "name": "line", "val": "[0 0 0 0 0 0 0 0]"}, {"id": "21", "type": "stmt", "val": "(pos, color) = `find the element in input where is not black, output is position and corresponding element color and if there is no non black element, return None`(line)"}, {"id": "22", "type": "val", "name": "pos", "val": "None"}, {"id": "23", "type": "val", "name": "color", "val": "None"}, {"id": "25", "type": "stmt", "val": "output_line = `output is the same size as input line, but the last element is input last_color and the other place is same as input line`(line, last_color)"}, {"id": "26", "type": "val", "name": "output_line", "val": "[0 0 0 0 0 0 0 8]"}, {"id": "27", "type": "stmt", "val": "output_grid = `change the line in output_grid to output_line in index`(output_grid, output_line, index)"}, {"id": "28", "type": "val", "name": "output_grid", "val": "[[0 0 0 8 8 8 8 8]\n [0 0 0 0 0 0 0 8]\n [0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0]]"}, {"id": "30", "type": "val", "name": "index", "val": "2"}, {"id": "31", "type": "val", "name": "line", "val": "[0 0 7 0 0 0 0 0]"}, {"id": "32", "type": "stmt", "val": "(pos, color) = `find the element in input where is not black, output is position and corresponding element color and if there is no non black element, return None`(line)"}, {"id": "33", "type": "val", "name": "pos", "val": "2"}, {"id": "34", "type": "val", "name": "color", "val": "7"}, {"id": "36", "type": "stmt", "val": "output_line = `output is the same size as input line, but index less than input pos is black and index more than or equal to input pos is color`(line, pos, color)"}, {"id": "37", "type": "val", "name": "output_line", "val": "[0 0 7 7 7 7 7 7]"}, {"id": "39", "type": "val", "name": "last_color", "val": "7"}, {"id": "40", "type": "stmt", "val": "output_grid = `change the line in output_grid to output_line in index`(output_grid, output_line, index)"}, {"id": "41", "type": "val", "name": "output_grid", "val": "[[0 0 0 8 8 8 8 8]\n [0 0 0 0 0 0 0 8]\n [0 0 7 7 7 7 7 7]\n [0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0]]"}, {"id": "43", "type": "val", "name": "index", "val": "3"}, {"id": "44", "type": "val", "name": "line", "val": "[0 0 0 0 0 0 0 0]"}, {"id": "45", "type": "stmt", "val": "(pos, color) = `find the element in input where is not black, output is position and corresponding element color and if there is no non black element, return None`(line)"}, {"id": "46", "type": "val", "name": "pos", "val": "None"}, {"id": "47", "type": "val", "name": "color", "val": "None"}, {"id": "49", "type": "stmt", "val": "output_line = `output is the same size as input line, but the last element is input last_color and the other place is same as input line`(line, last_color)"}, {"id": "50", "type": "val", "name": "output_line", "val": "[0 0 0 0 0 0 0 7]"}, {"id": "51", "type": "stmt", "val": "output_grid = `change the line in output_grid to output_line in index`(output_grid, output_line, index)"}, {"id": "52", "type": "val", "name": "output_grid", "val": "[[0 0 0 8 8 8 8 8]\n [0 0 0 0 0 0 0 8]\n [0 0 7 7 7 7 7 7]\n [0 0 0 0 0 0 0 7]\n [0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0]]"}, {"id": "54", "type": "val", "name": "index", "val": "4"}, {"id": "55", "type": "val", "name": "line", "val": "[0 0 0 0 0 2 0 0]"}, {"id": "56", "type": "stmt", "val": "(pos, color) = `find the element in input where is not black, output is position and corresponding element color and if there is no non black element, return None`(line)"}, {"id": "57", "type": "val", "name": "pos", "val": "5"}, {"id": "58", "type": "val", "name": "color", "val": "2"}, {"id": "60", "type": "stmt", "val": "output_line = `output is the same size as input line, but index less than input pos is black and index more than or equal to input pos is color`(line, pos, color)"}, {"id": "61", "type": "val", "name": "output_line", "val": "[0 0 0 0 0 2 2 2]"}, {"id": "63", "type": "val", "name": "last_color", "val": "2"}, {"id": "64", "type": "stmt", "val": "output_grid = `change the line in output_grid to output_line in index`(output_grid, output_line, index)"}, {"id": "65", "type": "val", "name": "output_grid", "val": "[[0 0 0 8 8 8 8 8]\n [0 0 0 0 0 0 0 8]\n [0 0 7 7 7 7 7 7]\n [0 0 0 0 0 0 0 7]\n [0 0 0 0 0 2 2 2]\n [0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0]]"}, {"id": "67", "type": "val", "name": "index", "val": "5"}, {"id": "68", "type": "val", "name": "line", "val": "[0 0 0 0 0 0 0 0]"}, {"id": "69", "type": "stmt", "val": "(pos, color) = `find the element in input where is not black, output is position and corresponding element color and if there is no non black element, return None`(line)"}, {"id": "70", "type": "val", "name": "pos", "val": "None"}, {"id": "71", "type": "val", "name": "color", "val": "None"}, {"id": "73", "type": "stmt", "val": "output_line = `output is the same size as input line, but the last element is input last_color and the other place is same as input line`(line, last_color)"}, {"id": "74", "type": "val", "name": "output_line", "val": "[0 0 0 0 0 0 0 2]"}, {"id": "75", "type": "stmt", "val": "output_grid = `change the line in output_grid to output_line in index`(output_grid, output_line, index)"}, {"id": "76", "type": "val", "name": "output_grid", "val": "[[0 0 0 8 8 8 8 8]\n [0 0 0 0 0 0 0 8]\n [0 0 7 7 7 7 7 7]\n [0 0 0 0 0 0 0 7]\n [0 0 0 0 0 2 2 2]\n [0 0 0 0 0 0 0 2]\n [0 0 0 0 0 0 0 0]]"}, {"id": "78", "type": "val", "name": "index", "val": "6"}, {"id": "79", "type": "stmt", "val": "(pos, color) = `find the element in input where is not black, output is position and corresponding element color and if there is no non black element, return None`(line)"}, {"id": "81", "type": "stmt", "val": "output_line = `output is the same size as input line, but the last element is input last_color and the other place is same as input line`(line, last_color)"}, {"id": "82", "type": "stmt", "val": "output_grid = `change the line in output_grid to output_line in index`(output_grid, output_line, index)"}, {"id": "83", "type": "val", "name": "output_grid", "val": "[[0 0 0 8 8 8 8 8]\n [0 0 0 0 0 0 0 8]\n [0 0 7 7 7 7 7 7]\n [0 0 0 0 0 0 0 7]\n [0 0 0 0 0 2 2 2]\n [0 0 0 0 0 0 0 2]\n [0 0 0 0 0 0 0 2]]"}, {"id": "85", "type": "stmt", "val": "return output_grid"}], "edges": [["0", "1"], ["1", "2"], ["7", "8"], ["8", "9"], ["8", "10"], ["10", "12"], ["9", "12"], ["7", "12"], ["12", "13"], ["13", "16"], ["2", "16"], ["6", "16"], ["16", "17"], ["9", "21"], ["20", "21"], ["10", "21"], ["21", "22"], ["21", "23"], ["13", "25"], ["20", "25"], ["15", "25"], ["25", "26"], ["26", "27"], ["17", "27"], ["19", "27"], ["27", "28"], ["22", "32"], ["31", "32"], ["23", "32"], ["32", "33"], ["32", "34"], ["34", "36"], ["33", "36"], ["26", "36"], ["31", "36"], ["36", "37"], ["37", "40"], ["28", "40"], ["30", "40"], ["40", "41"], ["33", "45"], ["44", "45"], ["34", "45"], ["45", "46"], ["45", "47"], ["37", "49"], ["44", "49"], ["39", "49"], ["49", "50"], ["50", "51"], ["41", "51"], ["43", "51"], ["51", "52"], ["46", "56"], ["55", "56"], ["47", "56"], ["56", "57"], ["56", "58"], ["58", "60"], ["57", "60"], ["50", "60"], ["55", "60"], ["60", "61"], ["61", "64"], ["52", "64"], ["54", "64"], ["64", "65"], ["57", "69"], ["68", "69"], ["58", "69"], ["69", "70"], ["69", "71"], ["61", "73"], ["68", "73"], ["63", "73"], ["73", "74"], ["74", "75"], ["65", "75"], ["67", "75"], ["75", "76"], ["70", "79"], ["68", "79"], ["71", "79"], ["74", "81"], ["68", "81"], ["63", "81"], ["74", "82"], ["76", "82"], ["78", "82"], ["82", "83"], ["83", "85"]]}