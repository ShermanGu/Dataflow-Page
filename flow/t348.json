{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 9 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 9 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]"}, {"id": "1", "type": "stmt", "val": "out = `For each column, if there are maroon pixels, replace all black pixels below maroon pixels with blue`(input_grid)"}, {"id": "2", "type": "val", "name": "out", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 9 9 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 9 9 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]]"}, {"id": "3", "type": "stmt", "val": "w = `Return the width`(out)"}, {"id": "6", "type": "val", "name": "j", "val": "0"}, {"id": "7", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "8", "type": "val", "name": "flag", "val": "False"}, {"id": "11", "type": "val", "name": "j", "val": "1"}, {"id": "12", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "15", "type": "val", "name": "j", "val": "2"}, {"id": "16", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "19", "type": "val", "name": "j", "val": "3"}, {"id": "20", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "23", "type": "val", "name": "j", "val": "4"}, {"id": "24", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "25", "type": "val", "name": "flag", "val": "True"}, {"id": "27", "type": "stmt", "val": "(r1, r2) = `Return the minimun row and maximun row of maroon pixels in column j`(out, j)"}, {"id": "28", "type": "val", "name": "r1", "val": "22"}, {"id": "29", "type": "val", "name": "r2", "val": "23"}, {"id": "31", "type": "val", "name": "gap", "val": "1"}, {"id": "32", "type": "stmt", "val": "out = `Replace the black and blue pixels of the matrix from row r1-gap to row r2+gap, and from column j-gap to column j+gap+r2-r1 with green`(out, r1, r2, j, gap)"}, {"id": "33", "type": "val", "name": "out", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 3 3 3 3 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 3 9 9 3 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 3 9 9 3 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 3 3 3 3 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]]"}, {"id": "35", "type": "val", "name": "j", "val": "5"}, {"id": "36", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "37", "type": "val", "name": "flag", "val": "False"}, {"id": "40", "type": "val", "name": "j", "val": "6"}, {"id": "41", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "44", "type": "val", "name": "j", "val": "7"}, {"id": "45", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "48", "type": "val", "name": "j", "val": "8"}, {"id": "49", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "52", "type": "val", "name": "j", "val": "9"}, {"id": "53", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "54", "type": "val", "name": "flag", "val": "True"}, {"id": "56", "type": "stmt", "val": "(r1, r2) = `Return the minimun row and maximun row of maroon pixels in column j`(out, j)"}, {"id": "57", "type": "val", "name": "r1", "val": "7"}, {"id": "58", "type": "val", "name": "r2", "val": "10"}, {"id": "60", "type": "val", "name": "gap", "val": "2"}, {"id": "61", "type": "stmt", "val": "out = `Replace the black and blue pixels of the matrix from row r1-gap to row r2+gap, and from column j-gap to column j+gap+r2-r1 with green`(out, r1, r2, j, gap)"}, {"id": "62", "type": "val", "name": "out", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 3 3 3 3 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 3 9 9 3 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 3 9 9 3 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 3 3 3 3 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]]"}, {"id": "64", "type": "val", "name": "j", "val": "10"}, {"id": "65", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "66", "type": "val", "name": "flag", "val": "False"}, {"id": "69", "type": "val", "name": "j", "val": "11"}, {"id": "70", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "73", "type": "val", "name": "j", "val": "12"}, {"id": "74", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "77", "type": "val", "name": "j", "val": "13"}, {"id": "78", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "81", "type": "val", "name": "j", "val": "14"}, {"id": "82", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "85", "type": "val", "name": "j", "val": "15"}, {"id": "86", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "89", "type": "val", "name": "j", "val": "16"}, {"id": "90", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "91", "type": "val", "name": "flag", "val": "True"}, {"id": "93", "type": "stmt", "val": "(r1, r2) = `Return the minimun row and maximun row of maroon pixels in column j`(out, j)"}, {"id": "94", "type": "val", "name": "r1", "val": "2"}, {"id": "95", "type": "val", "name": "r2", "val": "5"}, {"id": "97", "type": "stmt", "val": "out = `Replace the black and blue pixels of the matrix from row r1-gap to row r2+gap, and from column j-gap to column j+gap+r2-r1 with green`(out, r1, r2, j, gap)"}, {"id": "98", "type": "val", "name": "out", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 3 9 9 9 9 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 3 3 3 3 3 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 3 3 3 3 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 3 9 9 3 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 3 9 9 3 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 3 3 3 3 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]]"}, {"id": "100", "type": "val", "name": "j", "val": "17"}, {"id": "101", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "102", "type": "val", "name": "flag", "val": "False"}, {"id": "105", "type": "val", "name": "j", "val": "18"}, {"id": "106", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "109", "type": "val", "name": "j", "val": "19"}, {"id": "110", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "113", "type": "val", "name": "j", "val": "20"}, {"id": "114", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "117", "type": "val", "name": "j", "val": "21"}, {"id": "118", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "119", "type": "val", "name": "flag", "val": "True"}, {"id": "121", "type": "stmt", "val": "(r1, r2) = `Return the minimun row and maximun row of maroon pixels in column j`(out, j)"}, {"id": "122", "type": "val", "name": "r1", "val": "16"}, {"id": "123", "type": "val", "name": "r2", "val": "21"}, {"id": "125", "type": "val", "name": "gap", "val": "3"}, {"id": "126", "type": "stmt", "val": "out = `Replace the black and blue pixels of the matrix from row r1-gap to row r2+gap, and from column j-gap to column j+gap+r2-r1 with green`(out, r1, r2, j, gap)"}, {"id": "127", "type": "val", "name": "out", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 3 9 9 9 9 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 3 3 3 3 3 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 3 3 3 3 3 3 3 3 3 3 3 3]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 3 3 3 3 3 3 3 3 3 3 3 3]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 3 3 3 3 3 3 3 3 3 3 3 3]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 3 3 3 9 9 9 9 9 9 3 3 3]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 3 3 3 9 9 9 9 9 9 3 3 3]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 3 3 3 9 9 9 9 9 9 3 3 3]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 3 3 3 9 9 9 9 9 9 3 3 3]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 3 3 3 9 9 9 9 9 9 3 3 3]\n [0 0 0 3 3 3 3 0 0 1 1 1 1 0 0 0 1 1 3 3 3 9 9 9 9 9 9 3 3 3]\n [0 0 0 3 9 9 3 0 0 1 1 1 1 0 0 0 1 1 3 3 3 3 3 3 3 3 3 3 3 3]\n [0 0 0 3 9 9 3 0 0 1 1 1 1 0 0 0 1 1 3 3 3 3 3 3 3 3 3 3 3 3]\n [0 0 0 3 3 3 3 0 0 1 1 1 1 0 0 0 1 1 3 3 3 3 3 3 3 3 3 3 3 3]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]]"}, {"id": "129", "type": "val", "name": "j", "val": "22"}, {"id": "130", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "131", "type": "val", "name": "flag", "val": "False"}, {"id": "134", "type": "val", "name": "j", "val": "23"}, {"id": "135", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "138", "type": "val", "name": "j", "val": "24"}, {"id": "139", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "142", "type": "val", "name": "j", "val": "25"}, {"id": "143", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "146", "type": "val", "name": "j", "val": "26"}, {"id": "147", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "150", "type": "val", "name": "j", "val": "27"}, {"id": "151", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "154", "type": "val", "name": "j", "val": "28"}, {"id": "155", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "158", "type": "val", "name": "j", "val": "29"}, {"id": "159", "type": "stmt", "val": "flag = `Return whether there are maroon pixels and no green pixels below the maroon pixels in column j`(out, j)"}, {"id": "162", "type": "stmt", "val": "return out"}], "edges": [["0", "1"], ["1", "2"], ["2", "3"], ["6", "7"], ["2", "7"], ["7", "8"], ["11", "12"], ["8", "12"], ["2", "12"], ["15", "16"], ["8", "16"], ["2", "16"], ["19", "20"], ["8", "20"], ["2", "20"], ["23", "24"], ["8", "24"], ["2", "24"], ["24", "25"], ["23", "27"], ["2", "27"], ["27", "28"], ["27", "29"], ["23", "32"], ["29", "32"], ["28", "32"], ["31", "32"], ["2", "32"], ["32", "33"], ["35", "36"], ["25", "36"], ["33", "36"], ["36", "37"], ["40", "41"], ["37", "41"], ["33", "41"], ["44", "45"], ["37", "45"], ["33", "45"], ["48", "49"], ["37", "49"], ["33", "49"], ["52", "53"], ["37", "53"], ["33", "53"], ["53", "54"], ["52", "56"], ["29", "56"], ["28", "56"], ["33", "56"], ["56", "57"], ["56", "58"], ["52", "61"], ["58", "61"], ["57", "61"], ["60", "61"], ["33", "61"], ["61", "62"], ["64", "65"], ["54", "65"], ["62", "65"], ["65", "66"], ["69", "70"], ["66", "70"], ["62", "70"], ["73", "74"], ["66", "74"], ["62", "74"], ["77", "78"], ["66", "78"], ["62", "78"], ["81", "82"], ["66", "82"], ["62", "82"], ["85", "86"], ["66", "86"], ["62", "86"], ["89", "90"], ["66", "90"], ["62", "90"], ["90", "91"], ["89", "93"], ["58", "93"], ["57", "93"], ["62", "93"], ["93", "94"], ["93", "95"], ["89", "97"], ["95", "97"], ["94", "97"], ["60", "97"], ["62", "97"], ["97", "98"], ["100", "101"], ["91", "101"], ["98", "101"], ["101", "102"], ["105", "106"], ["102", "106"], ["98", "106"], ["109", "110"], ["102", "110"], ["98", "110"], ["113", "114"], ["102", "114"], ["98", "114"], ["117", "118"], ["102", "118"], ["98", "118"], ["118", "119"], ["117", "121"], ["95", "121"], ["94", "121"], ["98", "121"], ["121", "122"], ["121", "123"], ["117", "126"], ["123", "126"], ["122", "126"], ["125", "126"], ["98", "126"], ["126", "127"], ["129", "130"], ["119", "130"], ["127", "130"], ["130", "131"], ["134", "135"], ["131", "135"], ["127", "135"], ["138", "139"], ["131", "139"], ["127", "139"], ["142", "143"], ["131", "143"], ["127", "143"], ["146", "147"], ["131", "147"], ["127", "147"], ["150", "151"], ["131", "151"], ["127", "151"], ["154", "155"], ["131", "155"], ["127", "155"], ["158", "159"], ["131", "159"], ["127", "159"], ["127", "162"]]}