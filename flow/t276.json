{"nodes": [{"id": "0", "type": "val", "name": "input", "val": "[[0 0 0 0 0 0 0 0 0 0]\n [0 8 8 0 0 0 8 8 8 0]\n [0 0 8 0 0 0 0 0 8 0]\n [0 8 0 0 0 0 0 8 0 0]\n [0 8 8 8 0 0 8 8 8 8]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 8 8 8 0 0 0 0]\n [0 0 0 0 0 8 0 0 0 0]\n [0 0 0 0 8 0 0 0 0 0]\n [0 0 0 8 8 8 8 0 0 0]]"}, {"id": "1", "type": "stmt", "val": "connected_domains = `This function takes a 2D list of integers as input and returns a list of three teal eight-connected domains in the input.`(input)"}, {"id": "2", "type": "val", "name": "connected_domains", "val": "[[(1, 1), (1, 2), (2, 2), (3, 1), (4, 1), (4, 2), (4, 3)], [(1, 6), (1, 7), (1, 8), (2, 8), (3, 7), (4, 7), (4, 8), (4, 9), (4, 6)], [(6, 3), (6, 4), (6, 5), (7, 5), (8, 4), (9, 4), (9, 5), (9, 6), (9, 3)]]"}, {"id": "3", "type": "stmt", "val": "connected_domains = sorted(connected_domains, key=lambda x: len(x))"}, {"id": "4", "type": "stmt", "val": "for domain in connected_domains:"}, {"id": "5", "type": "val", "name": "domain", "val": "[(1, 1), (1, 2), (2, 2), (3, 1), (4, 1), (4, 2), (4, 3)]"}, {"id": "6", "type": "stmt", "val": "input = color_positions(input, domain, blue)"}, {"id": "7", "type": "val", "name": "input", "val": "[[0 0 0 0 0 0 0 0 0 0]\n [0 1 1 0 0 0 8 8 8 0]\n [0 0 1 0 0 0 0 0 8 0]\n [0 1 0 0 0 0 0 8 0 0]\n [0 1 1 1 0 0 8 8 8 8]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 8 8 8 0 0 0 0]\n [0 0 0 0 0 8 0 0 0 0]\n [0 0 0 0 8 0 0 0 0 0]\n [0 0 0 8 8 8 8 0 0 0]]"}, {"id": "8", "type": "stmt", "val": "for domain in connected_domains:"}, {"id": "9", "type": "val", "name": "domain", "val": "[(1, 6), (1, 7), (1, 8), (2, 8), (3, 7), (4, 7), (4, 8), (4, 9), (4, 6)]"}, {"id": "10", "type": "stmt", "val": "input = color_positions(input, domain, blue)"}, {"id": "11", "type": "val", "name": "input", "val": "[[0 0 0 0 0 0 0 0 0 0]\n [0 1 1 0 0 0 1 1 1 0]\n [0 0 1 0 0 0 0 0 1 0]\n [0 1 0 0 0 0 0 1 0 0]\n [0 1 1 1 0 0 1 1 1 1]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 8 8 8 0 0 0 0]\n [0 0 0 0 0 8 0 0 0 0]\n [0 0 0 0 8 0 0 0 0 0]\n [0 0 0 8 8 8 8 0 0 0]]"}, {"id": "12", "type": "stmt", "val": "for domain in connected_domains:"}, {"id": "13", "type": "val", "name": "domain", "val": "[(6, 3), (6, 4), (6, 5), (7, 5), (8, 4), (9, 4), (9, 5), (9, 6), (9, 3)]"}, {"id": "14", "type": "stmt", "val": "input = color_positions(input, domain, blue)"}, {"id": "15", "type": "val", "name": "input", "val": "[[0 0 0 0 0 0 0 0 0 0]\n [0 1 1 0 0 0 1 1 1 0]\n [0 0 1 0 0 0 0 0 1 0]\n [0 1 0 0 0 0 0 1 0 0]\n [0 1 1 1 0 0 1 1 1 1]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 1 1 1 0 0 0 0]\n [0 0 0 0 0 1 0 0 0 0]\n [0 0 0 0 1 0 0 0 0 0]\n [0 0 0 1 1 1 1 0 0 0]]"}, {"id": "16", "type": "stmt", "val": "for domain in connected_domains:"}, {"id": "17", "type": "stmt", "val": "input = color_positions(input, connected_domains[0], red)"}, {"id": "18", "type": "val", "name": "input", "val": "[[0 0 0 0 0 0 0 0 0 0]\n [0 2 2 0 0 0 1 1 1 0]\n [0 0 2 0 0 0 0 0 1 0]\n [0 2 0 0 0 0 0 1 0 0]\n [0 2 2 2 0 0 1 1 1 1]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 1 1 1 0 0 0 0]\n [0 0 0 0 0 1 0 0 0 0]\n [0 0 0 0 1 0 0 0 0 0]\n [0 0 0 1 1 1 1 0 0 0]]"}, {"id": "19", "type": "stmt", "val": "return input"}], "edges": [["0", "1"], ["1", "2"], ["2", "3"], ["2", "4"], ["4", "5"], ["0", "6"], ["5", "6"], ["6", "7"], ["5", "8"], ["2", "8"], ["8", "9"], ["7", "10"], ["9", "10"], ["10", "11"], ["9", "12"], ["2", "12"], ["12", "13"], ["11", "14"], ["13", "14"], ["14", "15"], ["13", "16"], ["2", "16"], ["15", "17"], ["2", "17"], ["17", "18"], ["18", "19"]]}