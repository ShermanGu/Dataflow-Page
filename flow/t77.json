{"nodes": [{"id": "2", "type": "val", "name": "output_grid", "val": "[[0 1 1 1 1 1 1 1 1 1]\n [0 1 0 1 1 1 1 1 0 1]\n [0 1 0 1 0 1 0 1 0 1]\n [0 1 0 1 0 0 0 1 0 1]\n [0 0 0 1 0 0 0 0 2 1]\n [0 0 0 0 0 0 0 0 2 0]\n [0 0 0 0 0 2 0 0 2 0]\n [0 0 2 0 0 2 0 0 2 0]\n [0 0 2 0 2 2 0 0 2 0]\n [0 0 2 0 2 2 2 0 2 0]]"}, {"id": "3", "type": "stmt", "val": "dict = ` Traverse all the columns, find all the columns with red squares, calculate the distance between the first black square and the first red square and generate a dictionary (key is column number,value is distance) `(output_grid)"}, {"id": "6", "type": "val", "name": "kv", "val": "(2, 6)"}, {"id": "7", "type": "stmt", "val": "output_grid = ` move all the red squares of the input column up by the corresponding distance `(output_grid, kv)"}, {"id": "8", "type": "val", "name": "output_grid", "val": "[[0 1 1 1 1 1 1 1 1 1]\n [0 1 2 1 1 1 1 1 0 1]\n [0 1 2 1 0 1 0 1 0 1]\n [0 1 2 1 0 0 0 1 0 1]\n [0 0 0 1 0 0 0 0 2 1]\n [0 0 0 0 0 0 0 0 2 0]\n [0 0 0 0 0 2 0 0 2 0]\n [0 0 0 0 0 2 0 0 2 0]\n [0 0 0 0 2 2 0 0 2 0]\n [0 0 0 0 2 2 2 0 2 0]]"}, {"id": "10", "type": "val", "name": "kv", "val": "(4, 6)"}, {"id": "11", "type": "stmt", "val": "output_grid = ` move all the red squares of the input column up by the corresponding distance `(output_grid, kv)"}, {"id": "12", "type": "val", "name": "output_grid", "val": "[[0 1 1 1 1 1 1 1 1 1]\n [0 1 2 1 1 1 1 1 0 1]\n [0 1 2 1 2 1 0 1 0 1]\n [0 1 2 1 2 0 0 1 0 1]\n [0 0 0 1 0 0 0 0 2 1]\n [0 0 0 0 0 0 0 0 2 0]\n [0 0 0 0 0 2 0 0 2 0]\n [0 0 0 0 0 2 0 0 2 0]\n [0 0 0 0 0 2 0 0 2 0]\n [0 0 0 0 0 2 2 0 2 0]]"}, {"id": "14", "type": "val", "name": "kv", "val": "(5, 3)"}, {"id": "15", "type": "stmt", "val": "output_grid = ` move all the red squares of the input column up by the corresponding distance `(output_grid, kv)"}, {"id": "16", "type": "val", "name": "output_grid", "val": "[[0 1 1 1 1 1 1 1 1 1]\n [0 1 2 1 1 1 1 1 0 1]\n [0 1 2 1 2 1 0 1 0 1]\n [0 1 2 1 2 2 0 1 0 1]\n [0 0 0 1 0 2 0 0 2 1]\n [0 0 0 0 0 2 0 0 2 0]\n [0 0 0 0 0 2 0 0 2 0]\n [0 0 0 0 0 0 0 0 2 0]\n [0 0 0 0 0 0 0 0 2 0]\n [0 0 0 0 0 0 2 0 2 0]]"}, {"id": "18", "type": "val", "name": "kv", "val": "(6, 7)"}, {"id": "19", "type": "stmt", "val": "output_grid = ` move all the red squares of the input column up by the corresponding distance `(output_grid, kv)"}, {"id": "20", "type": "val", "name": "output_grid", "val": "[[0 1 1 1 1 1 1 1 1 1]\n [0 1 2 1 1 1 1 1 0 1]\n [0 1 2 1 2 1 2 1 0 1]\n [0 1 2 1 2 2 0 1 0 1]\n [0 0 0 1 0 2 0 0 2 1]\n [0 0 0 0 0 2 0 0 2 0]\n [0 0 0 0 0 2 0 0 2 0]\n [0 0 0 0 0 0 0 0 2 0]\n [0 0 0 0 0 0 0 0 2 0]\n [0 0 0 0 0 0 0 0 2 0]]"}, {"id": "22", "type": "val", "name": "kv", "val": "(8, 3)"}, {"id": "23", "type": "stmt", "val": "output_grid = ` move all the red squares of the input column up by the corresponding distance `(output_grid, kv)"}, {"id": "24", "type": "val", "name": "output_grid", "val": "[[0 1 1 1 1 1 1 1 1 1]\n [0 1 2 1 1 1 1 1 2 1]\n [0 1 2 1 2 1 2 1 2 1]\n [0 1 2 1 2 2 0 1 2 1]\n [0 0 0 1 0 2 0 0 2 1]\n [0 0 0 0 0 2 0 0 2 0]\n [0 0 0 0 0 2 0 0 2 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}, {"id": "26", "type": "stmt", "val": "return output_grid"}], "edges": [["2", "3"], ["6", "7"], ["2", "7"], ["7", "8"], ["10", "11"], ["8", "11"], ["11", "12"], ["14", "15"], ["12", "15"], ["15", "16"], ["18", "19"], ["16", "19"], ["19", "20"], ["22", "23"], ["20", "23"], ["23", "24"], ["24", "26"]]}