{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 0 0 0 0 0 0 0 0]\n [2 2 1 2 1 2 1 1 2 1]\n [0 0 0 0 0 0 0 0 0 0]\n [8 8 3 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [1 1 4 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [6 6 8 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [1 1 6 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}, {"id": "2", "type": "val", "name": "output_grid", "val": "[[0 0 0 0 0 0 0 0 0 0]\n [2 2 1 2 1 2 1 1 2 1]\n [0 0 0 0 0 0 0 0 0 0]\n [8 8 3 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [1 1 4 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [6 6 8 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [1 1 6 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}, {"id": "3", "type": "stmt", "val": "(compelete_row, row_id) = `find_complete_row and its row_id`(input_grid)"}, {"id": "4", "type": "val", "name": "compelete_row", "val": "[2 2 1 2 1 2 1 1 2 1]"}, {"id": "5", "type": "val", "name": "row_id", "val": "1"}, {"id": "6", "type": "stmt", "val": "pattern = `get the color pattern of this line`(compelete_row)"}, {"id": "7", "type": "val", "name": "pattern", "val": "['0', '0', '1', '0', '1', '0', '1', '1', '0', '1']"}, {"id": "9", "type": "val", "name": "i", "val": "0"}, {"id": "10", "type": "stmt", "val": "if `the_row_is_incomplete`(input_grid[i]) and i != row_id:"}, {"id": "11", "type": "stmt", "val": "output_grid[i] = `fill_row_with_pattern`(input_grid[i], pattern)"}, {"id": "13", "type": "val", "name": "i", "val": "1"}, {"id": "14", "type": "stmt", "val": "if `the_row_is_incomplete`(input_grid[i]) and i != row_id:"}, {"id": "16", "type": "val", "name": "i", "val": "2"}, {"id": "17", "type": "stmt", "val": "if `the_row_is_incomplete`(input_grid[i]) and i != row_id:"}, {"id": "18", "type": "stmt", "val": "output_grid[i] = `fill_row_with_pattern`(input_grid[i], pattern)"}, {"id": "20", "type": "val", "name": "i", "val": "3"}, {"id": "21", "type": "stmt", "val": "if `the_row_is_incomplete`(input_grid[i]) and i != row_id:"}, {"id": "22", "type": "stmt", "val": "output_grid[i] = `fill_row_with_pattern`(input_grid[i], pattern)"}, {"id": "23", "type": "val", "name": "output_grid", "val": "[[0 0 0 0 0 0 0 0 0 0]\n [2 2 1 2 1 2 1 1 2 1]\n [0 0 0 0 0 0 0 0 0 0]\n [8 8 3 8 3 8 3 3 8 3]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [1 1 4 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [6 6 8 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [1 1 6 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}, {"id": "25", "type": "val", "name": "i", "val": "4"}, {"id": "26", "type": "stmt", "val": "if `the_row_is_incomplete`(input_grid[i]) and i != row_id:"}, {"id": "27", "type": "stmt", "val": "output_grid[i] = `fill_row_with_pattern`(input_grid[i], pattern)"}, {"id": "29", "type": "val", "name": "i", "val": "5"}, {"id": "30", "type": "stmt", "val": "if `the_row_is_incomplete`(input_grid[i]) and i != row_id:"}, {"id": "31", "type": "stmt", "val": "output_grid[i] = `fill_row_with_pattern`(input_grid[i], pattern)"}, {"id": "33", "type": "val", "name": "i", "val": "6"}, {"id": "34", "type": "stmt", "val": "if `the_row_is_incomplete`(input_grid[i]) and i != row_id:"}, {"id": "35", "type": "stmt", "val": "output_grid[i] = `fill_row_with_pattern`(input_grid[i], pattern)"}, {"id": "36", "type": "val", "name": "output_grid", "val": "[[0 0 0 0 0 0 0 0 0 0]\n [2 2 1 2 1 2 1 1 2 1]\n [0 0 0 0 0 0 0 0 0 0]\n [8 8 3 8 3 8 3 3 8 3]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [1 1 4 1 4 1 4 4 1 4]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [6 6 8 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [1 1 6 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}, {"id": "38", "type": "val", "name": "i", "val": "7"}, {"id": "39", "type": "stmt", "val": "if `the_row_is_incomplete`(input_grid[i]) and i != row_id:"}, {"id": "40", "type": "stmt", "val": "output_grid[i] = `fill_row_with_pattern`(input_grid[i], pattern)"}, {"id": "42", "type": "val", "name": "i", "val": "8"}, {"id": "43", "type": "stmt", "val": "if `the_row_is_incomplete`(input_grid[i]) and i != row_id:"}, {"id": "44", "type": "stmt", "val": "output_grid[i] = `fill_row_with_pattern`(input_grid[i], pattern)"}, {"id": "46", "type": "val", "name": "i", "val": "9"}, {"id": "47", "type": "stmt", "val": "if `the_row_is_incomplete`(input_grid[i]) and i != row_id:"}, {"id": "48", "type": "stmt", "val": "output_grid[i] = `fill_row_with_pattern`(input_grid[i], pattern)"}, {"id": "49", "type": "val", "name": "output_grid", "val": "[[0 0 0 0 0 0 0 0 0 0]\n [2 2 1 2 1 2 1 1 2 1]\n [0 0 0 0 0 0 0 0 0 0]\n [8 8 3 8 3 8 3 3 8 3]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [1 1 4 1 4 1 4 4 1 4]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [6 6 8 6 8 6 8 8 6 8]\n [0 0 0 0 0 0 0 0 0 0]\n [1 1 6 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}, {"id": "51", "type": "val", "name": "i", "val": "10"}, {"id": "52", "type": "stmt", "val": "if `the_row_is_incomplete`(input_grid[i]) and i != row_id:"}, {"id": "53", "type": "stmt", "val": "output_grid[i] = `fill_row_with_pattern`(input_grid[i], pattern)"}, {"id": "55", "type": "val", "name": "i", "val": "11"}, {"id": "56", "type": "stmt", "val": "if `the_row_is_incomplete`(input_grid[i]) and i != row_id:"}, {"id": "57", "type": "stmt", "val": "output_grid[i] = `fill_row_with_pattern`(input_grid[i], pattern)"}, {"id": "58", "type": "val", "name": "output_grid", "val": "[[0 0 0 0 0 0 0 0 0 0]\n [2 2 1 2 1 2 1 1 2 1]\n [0 0 0 0 0 0 0 0 0 0]\n [8 8 3 8 3 8 3 3 8 3]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [1 1 4 1 4 1 4 4 1 4]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [6 6 8 6 8 6 8 8 6 8]\n [0 0 0 0 0 0 0 0 0 0]\n [1 1 6 1 6 1 6 6 1 6]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}, {"id": "60", "type": "val", "name": "i", "val": "12"}, {"id": "61", "type": "stmt", "val": "if `the_row_is_incomplete`(input_grid[i]) and i != row_id:"}, {"id": "62", "type": "stmt", "val": "output_grid[i] = `fill_row_with_pattern`(input_grid[i], pattern)"}, {"id": "64", "type": "val", "name": "i", "val": "13"}, {"id": "65", "type": "stmt", "val": "if `the_row_is_incomplete`(input_grid[i]) and i != row_id:"}, {"id": "66", "type": "stmt", "val": "output_grid[i] = `fill_row_with_pattern`(input_grid[i], pattern)"}, {"id": "68", "type": "stmt", "val": "return output_grid"}], "edges": [["0", "3"], ["3", "4"], ["3", "5"], ["4", "6"], ["6", "7"], ["5", "10"], ["9", "10"], ["0", "10"], ["2", "11"], ["9", "11"], ["7", "11"], ["0", "11"], ["5", "14"], ["13", "14"], ["0", "14"], ["5", "17"], ["16", "17"], ["0", "17"], ["2", "18"], ["16", "18"], ["7", "18"], ["0", "18"], ["5", "21"], ["20", "21"], ["0", "21"], ["2", "22"], ["20", "22"], ["7", "22"], ["0", "22"], ["22", "23"], ["5", "26"], ["25", "26"], ["0", "26"], ["23", "27"], ["25", "27"], ["7", "27"], ["0", "27"], ["5", "30"], ["29", "30"], ["0", "30"], ["23", "31"], ["29", "31"], ["7", "31"], ["0", "31"], ["5", "34"], ["33", "34"], ["0", "34"], ["23", "35"], ["33", "35"], ["7", "35"], ["0", "35"], ["35", "36"], ["5", "39"], ["38", "39"], ["0", "39"], ["36", "40"], ["38", "40"], ["7", "40"], ["0", "40"], ["5", "43"], ["42", "43"], ["0", "43"], ["36", "44"], ["42", "44"], ["7", "44"], ["0", "44"], ["5", "47"], ["46", "47"], ["0", "47"], ["36", "48"], ["46", "48"], ["7", "48"], ["0", "48"], ["48", "49"], ["5", "52"], ["51", "52"], ["0", "52"], ["49", "53"], ["51", "53"], ["7", "53"], ["0", "53"], ["5", "56"], ["55", "56"], ["0", "56"], ["49", "57"], ["55", "57"], ["7", "57"], ["0", "57"], ["57", "58"], ["5", "61"], ["60", "61"], ["0", "61"], ["58", "62"], ["60", "62"], ["7", "62"], ["0", "62"], ["5", "65"], ["64", "65"], ["0", "65"], ["58", "66"], ["64", "66"], ["7", "66"], ["0", "66"], ["58", "68"]]}