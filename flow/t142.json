{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 0 5 0 0 0 6 0 0]\n [2 2 2 5 0 0 0 6 6 0]\n [0 0 2 5 0 0 0 6 0 0]\n [5 5 5 5 0 3 0 0 0 0]\n [0 0 0 0 0 3 0 0 0 0]\n [0 0 0 0 0 3 3 0 0 0]\n [8 8 8 0 0 0 0 0 4 0]\n [8 0 0 0 0 0 0 0 4 0]\n [0 0 0 0 7 7 7 0 4 0]\n [0 0 0 0 0 0 7 0 0 0]]"}, {"id": "2", "type": "val", "name": "left_upper_square", "val": "[[0 0 0]\n [2 2 2]\n [0 0 2]]"}, {"id": "3", "type": "stmt", "val": "pattern = `get the non-black pattern in the left_upper_square`(left_upper_square)"}, {"id": "4", "type": "val", "name": "pattern", "val": "(array([1, 1, 1, 2], dtype=int64), array([0, 1, 2, 2], dtype=int64))"}, {"id": "5", "type": "stmt", "val": "another_pattern = `find the another pattern in the input_grid whose shape is the same as pattern`(input_grid, pattern)"}, {"id": "6", "type": "val", "name": "another_pattern", "val": "[[0 0 0]\n [7 7 7]\n [0 0 7]]"}, {"id": "8", "type": "val", "name": "output_grid", "val": "[[0 0 0 5 0 0 0 6 0 0]\n [2 2 2 5 0 0 0 6 6 0]\n [0 0 2 5 0 0 0 6 0 0]\n [5 5 5 5 0 3 0 0 0 0]\n [0 0 0 0 0 3 0 0 0 0]\n [0 0 0 0 0 3 3 0 0 0]\n [8 8 8 0 0 0 0 0 4 0]\n [8 0 0 0 0 0 0 0 4 0]\n [0 0 0 0 7 7 7 0 4 0]\n [0 0 0 0 0 0 7 0 0 0]]"}, {"id": "9", "type": "stmt", "val": "output_grid = `change the another pattern in the output_grid to grey`(output_grid, another_pattern)"}, {"id": "10", "type": "val", "name": "output_grid", "val": "[[0 0 0 5 0 0 0 6 0 0]\n [2 2 2 5 0 0 0 6 6 0]\n [0 0 2 5 0 0 0 6 0 0]\n [5 5 5 5 0 3 0 0 0 0]\n [0 0 0 0 0 3 0 0 0 0]\n [0 0 0 0 0 3 3 0 0 0]\n [8 8 8 0 0 0 0 0 4 0]\n [8 0 0 0 0 0 0 0 4 0]\n [0 0 0 0 5 5 5 0 4 0]\n [0 0 0 0 0 0 5 0 0 0]]"}, {"id": "11", "type": "stmt", "val": "return output_grid"}], "edges": [["2", "3"], ["3", "4"], ["4", "5"], ["0", "5"], ["5", "6"], ["8", "9"], ["6", "9"], ["9", "10"], ["10", "11"]]}