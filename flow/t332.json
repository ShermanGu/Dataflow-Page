{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 0 2 0 0 0 0 0 0]\n [2 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 2 0 0]\n [6 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 6 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [6 0 3 3 0 0 0 0 0 0]\n [0 0 3 3 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 2 0 0]\n [0 0 0 6 0 6 0 0 0 0]]"}, {"id": "1", "type": "stmt", "val": "(i, j) = `find the 2*2 green area in the grid, return its left-up coordinate`(input_grid)"}, {"id": "7", "type": "val", "name": "corner", "val": "(6, 2)"}, {"id": "8", "type": "stmt", "val": "`if there are non-black points on the row and column the corner is in. color all black points between the non-black point and the green corner with the color the non-black point has`(input_grid, corner)"}, {"id": "9", "type": "val", "name": "input_grid", "val": "[[0 0 0 2 0 0 0 0 0 0]\n [2 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 2 0 0]\n [6 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 6 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [6 6 3 3 0 0 0 0 0 0]\n [0 0 3 3 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 2 0 0]\n [0 0 0 6 0 6 0 0 0 0]]"}, {"id": "11", "type": "val", "name": "corner", "val": "(6, 3)"}, {"id": "12", "type": "stmt", "val": "`if there are non-black points on the row and column the corner is in. color all black points between the non-black point and the green corner with the color the non-black point has`(input_grid, corner)"}, {"id": "13", "type": "val", "name": "input_grid", "val": "[[0 0 0 2 0 0 0 0 0 0]\n [2 0 0 2 0 0 0 0 0 0]\n [0 0 0 2 0 0 0 2 0 0]\n [6 0 0 2 0 0 0 0 0 0]\n [0 0 0 2 0 0 0 6 0 0]\n [0 0 0 2 0 0 0 0 0 0]\n [6 6 3 3 0 0 0 0 0 0]\n [0 0 3 3 0 0 0 0 0 0]\n [0 0 0 6 0 0 0 2 0 0]\n [0 0 0 6 0 6 0 0 0 0]]"}, {"id": "15", "type": "val", "name": "corner", "val": "(7, 2)"}, {"id": "16", "type": "stmt", "val": "`if there are non-black points on the row and column the corner is in. color all black points between the non-black point and the green corner with the color the non-black point has`(input_grid, corner)"}, {"id": "18", "type": "val", "name": "corner", "val": "(7, 3)"}, {"id": "19", "type": "stmt", "val": "`if there are non-black points on the row and column the corner is in. color all black points between the non-black point and the green corner with the color the non-black point has`(input_grid, corner)"}, {"id": "21", "type": "stmt", "val": "return input_grid"}], "edges": [["0", "1"], ["7", "8"], ["0", "8"], ["8", "9"], ["11", "12"], ["9", "12"], ["12", "13"], ["15", "16"], ["13", "16"], ["18", "19"], ["13", "19"], ["13", "21"]]}