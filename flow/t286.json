{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 4 4 4 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 4 4 4 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 4 4 4 6 4 4 4 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "1", "type": "stmt", "val": "locs = find_yellow_pixels(input_grid)"}, {"id": "4", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 4 4 4 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 4 4 4 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 4 4 4 6 4 4 4 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "6", "type": "val", "name": "loc", "val": "(2, 6)"}, {"id": "7", "type": "stmt", "val": "color = find_symmetric_pixel_color(input_grid, loc)"}, {"id": "8", "type": "val", "name": "color", "val": "6"}, {"id": "10", "type": "stmt", "val": "output_grid = `change pixel to the color`(output_grid, loc, color)"}, {"id": "11", "type": "val", "name": "input_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 4 4 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 4 4 4 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 4 4 4 6 4 4 4 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "12", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 4 4 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 4 4 4 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 4 4 4 6 4 4 4 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "14", "type": "val", "name": "loc", "val": "(2, 7)"}, {"id": "15", "type": "stmt", "val": "color = find_symmetric_pixel_color(input_grid, loc)"}, {"id": "16", "type": "val", "name": "color", "val": "1"}, {"id": "18", "type": "stmt", "val": "output_grid = `change pixel to the color`(output_grid, loc, color)"}, {"id": "19", "type": "val", "name": "input_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 4 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 4 4 4 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 4 4 4 6 4 4 4 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "20", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 4 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 4 4 4 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 4 4 4 6 4 4 4 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "22", "type": "val", "name": "loc", "val": "(2, 8)"}, {"id": "23", "type": "stmt", "val": "color = find_symmetric_pixel_color(input_grid, loc)"}, {"id": "25", "type": "stmt", "val": "output_grid = `change pixel to the color`(output_grid, loc, color)"}, {"id": "26", "type": "val", "name": "input_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 4 4 4 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 4 4 4 6 4 4 4 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "27", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 4 4 4 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 4 4 4 6 4 4 4 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "29", "type": "val", "name": "loc", "val": "(3, 6)"}, {"id": "30", "type": "stmt", "val": "color = find_symmetric_pixel_color(input_grid, loc)"}, {"id": "32", "type": "stmt", "val": "output_grid = `change pixel to the color`(output_grid, loc, color)"}, {"id": "33", "type": "val", "name": "input_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 4 4 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 4 4 4 6 4 4 4 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "34", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 4 4 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 4 4 4 6 4 4 4 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "36", "type": "val", "name": "loc", "val": "(3, 7)"}, {"id": "37", "type": "stmt", "val": "color = find_symmetric_pixel_color(input_grid, loc)"}, {"id": "39", "type": "stmt", "val": "output_grid = `change pixel to the color`(output_grid, loc, color)"}, {"id": "40", "type": "val", "name": "input_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 4 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 4 4 4 6 4 4 4 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "41", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 4 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 4 4 4 6 4 4 4 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "43", "type": "val", "name": "loc", "val": "(3, 8)"}, {"id": "44", "type": "stmt", "val": "color = find_symmetric_pixel_color(input_grid, loc)"}, {"id": "46", "type": "stmt", "val": "output_grid = `change pixel to the color`(output_grid, loc, color)"}, {"id": "47", "type": "val", "name": "input_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 4 4 4 6 4 4 4 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "48", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 4 4 4 6 4 4 4 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "50", "type": "val", "name": "loc", "val": "(4, 6)"}, {"id": "51", "type": "stmt", "val": "color = find_symmetric_pixel_color(input_grid, loc)"}, {"id": "52", "type": "val", "name": "color", "val": "6"}, {"id": "54", "type": "stmt", "val": "output_grid = `change pixel to the color`(output_grid, loc, color)"}, {"id": "55", "type": "val", "name": "input_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 4 4 6 4 4 4 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "56", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 4 4 6 4 4 4 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "58", "type": "val", "name": "loc", "val": "(4, 7)"}, {"id": "59", "type": "stmt", "val": "color = find_symmetric_pixel_color(input_grid, loc)"}, {"id": "61", "type": "stmt", "val": "output_grid = `change pixel to the color`(output_grid, loc, color)"}, {"id": "62", "type": "val", "name": "input_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 4 6 4 4 4 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "63", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 4 6 4 4 4 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "65", "type": "val", "name": "loc", "val": "(4, 8)"}, {"id": "66", "type": "stmt", "val": "color = find_symmetric_pixel_color(input_grid, loc)"}, {"id": "68", "type": "stmt", "val": "output_grid = `change pixel to the color`(output_grid, loc, color)"}, {"id": "69", "type": "val", "name": "input_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 4 4 4 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "70", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 4 4 4 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "72", "type": "val", "name": "loc", "val": "(4, 10)"}, {"id": "73", "type": "stmt", "val": "color = find_symmetric_pixel_color(input_grid, loc)"}, {"id": "74", "type": "val", "name": "color", "val": "7"}, {"id": "76", "type": "stmt", "val": "output_grid = `change pixel to the color`(output_grid, loc, color)"}, {"id": "77", "type": "val", "name": "input_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 4 4 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "78", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 4 4 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "80", "type": "val", "name": "loc", "val": "(4, 11)"}, {"id": "81", "type": "stmt", "val": "color = find_symmetric_pixel_color(input_grid, loc)"}, {"id": "82", "type": "val", "name": "color", "val": "8"}, {"id": "84", "type": "stmt", "val": "output_grid = `change pixel to the color`(output_grid, loc, color)"}, {"id": "85", "type": "val", "name": "input_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 4 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "86", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 4 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "88", "type": "val", "name": "loc", "val": "(4, 12)"}, {"id": "89", "type": "stmt", "val": "color = find_symmetric_pixel_color(input_grid, loc)"}, {"id": "90", "type": "val", "name": "color", "val": "6"}, {"id": "92", "type": "stmt", "val": "output_grid = `change pixel to the color`(output_grid, loc, color)"}, {"id": "93", "type": "val", "name": "input_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "94", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 4 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "96", "type": "val", "name": "loc", "val": "(4, 13)"}, {"id": "97", "type": "stmt", "val": "color = find_symmetric_pixel_color(input_grid, loc)"}, {"id": "98", "type": "val", "name": "color", "val": "2"}, {"id": "100", "type": "stmt", "val": "output_grid = `change pixel to the color`(output_grid, loc, color)"}, {"id": "101", "type": "val", "name": "input_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "102", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [8 8 6 6 7 7 6 5 5 6 4 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "104", "type": "val", "name": "loc", "val": "(5, 10)"}, {"id": "105", "type": "stmt", "val": "color = find_symmetric_pixel_color(input_grid, loc)"}, {"id": "106", "type": "val", "name": "color", "val": "7"}, {"id": "108", "type": "stmt", "val": "output_grid = `change pixel to the color`(output_grid, loc, color)"}, {"id": "109", "type": "val", "name": "input_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [8 8 6 6 7 7 6 5 5 6 7 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "110", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [8 8 6 6 7 7 6 5 5 6 7 4 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "112", "type": "val", "name": "loc", "val": "(5, 11)"}, {"id": "113", "type": "stmt", "val": "color = find_symmetric_pixel_color(input_grid, loc)"}, {"id": "115", "type": "stmt", "val": "output_grid = `change pixel to the color`(output_grid, loc, color)"}, {"id": "116", "type": "val", "name": "input_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [8 8 6 6 7 7 6 5 5 6 7 7 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "117", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [8 8 6 6 7 7 6 5 5 6 7 7 4 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "119", "type": "val", "name": "loc", "val": "(5, 12)"}, {"id": "120", "type": "stmt", "val": "color = find_symmetric_pixel_color(input_grid, loc)"}, {"id": "121", "type": "val", "name": "color", "val": "6"}, {"id": "123", "type": "stmt", "val": "output_grid = `change pixel to the color`(output_grid, loc, color)"}, {"id": "124", "type": "val", "name": "input_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "125", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 4 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "127", "type": "val", "name": "loc", "val": "(5, 13)"}, {"id": "128", "type": "stmt", "val": "color = find_symmetric_pixel_color(input_grid, loc)"}, {"id": "130", "type": "stmt", "val": "output_grid = `change pixel to the color`(output_grid, loc, color)"}, {"id": "131", "type": "val", "name": "input_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "132", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [2 6 6 1 6 6 5 5 5 5 4 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "134", "type": "val", "name": "loc", "val": "(6, 10)"}, {"id": "135", "type": "stmt", "val": "color = find_symmetric_pixel_color(input_grid, loc)"}, {"id": "137", "type": "stmt", "val": "output_grid = `change pixel to the color`(output_grid, loc, color)"}, {"id": "138", "type": "val", "name": "input_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [2 6 6 1 6 6 5 5 5 5 6 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "139", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [2 6 6 1 6 6 5 5 5 5 6 4 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "141", "type": "val", "name": "loc", "val": "(6, 11)"}, {"id": "142", "type": "stmt", "val": "color = find_symmetric_pixel_color(input_grid, loc)"}, {"id": "144", "type": "stmt", "val": "output_grid = `change pixel to the color`(output_grid, loc, color)"}, {"id": "145", "type": "val", "name": "input_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [2 6 6 1 6 6 5 5 5 5 6 6 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "146", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [2 6 6 1 6 6 5 5 5 5 6 6 4 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "148", "type": "val", "name": "loc", "val": "(6, 12)"}, {"id": "149", "type": "stmt", "val": "color = find_symmetric_pixel_color(input_grid, loc)"}, {"id": "150", "type": "val", "name": "color", "val": "1"}, {"id": "152", "type": "stmt", "val": "output_grid = `change pixel to the color`(output_grid, loc, color)"}, {"id": "153", "type": "val", "name": "input_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "154", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 4 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "156", "type": "val", "name": "loc", "val": "(6, 13)"}, {"id": "157", "type": "stmt", "val": "color = find_symmetric_pixel_color(input_grid, loc)"}, {"id": "158", "type": "val", "name": "color", "val": "6"}, {"id": "160", "type": "stmt", "val": "output_grid = `change pixel to the color`(output_grid, loc, color)"}, {"id": "161", "type": "val", "name": "input_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "162", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [6 6 1 1 6 5 5 7 7 5 4 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "164", "type": "val", "name": "loc", "val": "(7, 10)"}, {"id": "165", "type": "stmt", "val": "color = find_symmetric_pixel_color(input_grid, loc)"}, {"id": "166", "type": "val", "name": "color", "val": "5"}, {"id": "168", "type": "stmt", "val": "output_grid = `change pixel to the color`(output_grid, loc, color)"}, {"id": "169", "type": "val", "name": "input_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [6 6 1 1 6 5 5 7 7 5 5 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "170", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [6 6 1 1 6 5 5 7 7 5 5 4 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "172", "type": "val", "name": "loc", "val": "(7, 11)"}, {"id": "173", "type": "stmt", "val": "color = find_symmetric_pixel_color(input_grid, loc)"}, {"id": "174", "type": "val", "name": "color", "val": "6"}, {"id": "176", "type": "stmt", "val": "output_grid = `change pixel to the color`(output_grid, loc, color)"}, {"id": "177", "type": "val", "name": "input_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [6 6 1 1 6 5 5 7 7 5 5 6 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "178", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [6 6 1 1 6 5 5 7 7 5 5 6 4 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "180", "type": "val", "name": "loc", "val": "(7, 12)"}, {"id": "181", "type": "stmt", "val": "color = find_symmetric_pixel_color(input_grid, loc)"}, {"id": "182", "type": "val", "name": "color", "val": "1"}, {"id": "184", "type": "stmt", "val": "output_grid = `change pixel to the color`(output_grid, loc, color)"}, {"id": "185", "type": "val", "name": "input_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "186", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 4 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "188", "type": "val", "name": "loc", "val": "(7, 13)"}, {"id": "189", "type": "stmt", "val": "color = find_symmetric_pixel_color(input_grid, loc)"}, {"id": "191", "type": "stmt", "val": "output_grid = `change pixel to the color`(output_grid, loc, color)"}, {"id": "193", "type": "val", "name": "output_grid", "val": "[[7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [6 6 1 1 6 5 5 7 7 5 5 6 1 1 6 6]\n [2 6 6 1 6 6 5 5 5 5 6 6 1 6 6 2]\n [8 8 6 6 7 7 6 5 5 6 7 7 6 6 8 8]\n [9 8 2 6 8 7 6 6 6 6 7 8 6 2 8 9]\n [1 8 9 1 6 6 1 1 1 1 6 6 1 9 8 1]\n [8 1 6 9 2 6 6 1 1 6 6 2 9 6 1 8]\n [7 1 1 8 8 8 6 6 6 6 8 8 8 1 1 7]\n [7 7 8 1 9 8 2 6 6 2 8 9 1 8 7 7]]"}, {"id": "195", "type": "stmt", "val": "return output_grid"}], "edges": [["0", "1"], ["6", "7"], ["0", "7"], ["7", "8"], ["8", "10"], ["6", "10"], ["4", "10"], ["10", "11"], ["10", "12"], ["8", "15"], ["14", "15"], ["11", "15"], ["15", "16"], ["16", "18"], ["14", "18"], ["12", "18"], ["18", "19"], ["18", "20"], ["16", "23"], ["22", "23"], ["19", "23"], ["16", "25"], ["22", "25"], ["20", "25"], ["25", "26"], ["25", "27"], ["16", "30"], ["29", "30"], ["26", "30"], ["16", "32"], ["29", "32"], ["27", "32"], ["32", "33"], ["32", "34"], ["16", "37"], ["36", "37"], ["33", "37"], ["16", "39"], ["36", "39"], ["34", "39"], ["39", "40"], ["39", "41"], ["16", "44"], ["43", "44"], ["40", "44"], ["16", "46"], ["43", "46"], ["41", "46"], ["46", "47"], ["46", "48"], ["16", "51"], ["50", "51"], ["47", "51"], ["51", "52"], ["52", "54"], ["50", "54"], ["48", "54"], ["54", "55"], ["54", "56"], ["52", "59"], ["58", "59"], ["55", "59"], ["52", "61"], ["58", "61"], ["56", "61"], ["61", "62"], ["61", "63"], ["52", "66"], ["65", "66"], ["62", "66"], ["52", "68"], ["65", "68"], ["63", "68"], ["68", "69"], ["68", "70"], ["52", "73"], ["72", "73"], ["69", "73"], ["73", "74"], ["74", "76"], ["72", "76"], ["70", "76"], ["76", "77"], ["76", "78"], ["74", "81"], ["80", "81"], ["77", "81"], ["81", "82"], ["82", "84"], ["80", "84"], ["78", "84"], ["84", "85"], ["84", "86"], ["82", "89"], ["88", "89"], ["85", "89"], ["89", "90"], ["90", "92"], ["88", "92"], ["86", "92"], ["92", "93"], ["92", "94"], ["90", "97"], ["96", "97"], ["93", "97"], ["97", "98"], ["98", "100"], ["96", "100"], ["94", "100"], ["100", "101"], ["100", "102"], ["98", "105"], ["104", "105"], ["101", "105"], ["105", "106"], ["106", "108"], ["104", "108"], ["102", "108"], ["108", "109"], ["108", "110"], ["106", "113"], ["112", "113"], ["109", "113"], ["106", "115"], ["112", "115"], ["110", "115"], ["115", "116"], ["115", "117"], ["106", "120"], ["119", "120"], ["116", "120"], ["120", "121"], ["121", "123"], ["119", "123"], ["117", "123"], ["123", "124"], ["123", "125"], ["121", "128"], ["127", "128"], ["124", "128"], ["121", "130"], ["127", "130"], ["125", "130"], ["130", "131"], ["130", "132"], ["121", "135"], ["134", "135"], ["131", "135"], ["121", "137"], ["134", "137"], ["132", "137"], ["137", "138"], ["137", "139"], ["121", "142"], ["141", "142"], ["138", "142"], ["121", "144"], ["141", "144"], ["139", "144"], ["144", "145"], ["144", "146"], ["121", "149"], ["148", "149"], ["145", "149"], ["149", "150"], ["150", "152"], ["148", "152"], ["146", "152"], ["152", "153"], ["152", "154"], ["150", "157"], ["156", "157"], ["153", "157"], ["157", "158"], ["158", "160"], ["156", "160"], ["154", "160"], ["160", "161"], ["160", "162"], ["158", "165"], ["164", "165"], ["161", "165"], ["165", "166"], ["166", "168"], ["164", "168"], ["162", "168"], ["168", "169"], ["168", "170"], ["166", "173"], ["172", "173"], ["169", "173"], ["173", "174"], ["174", "176"], ["172", "176"], ["170", "176"], ["176", "177"], ["176", "178"], ["174", "181"], ["180", "181"], ["177", "181"], ["181", "182"], ["182", "184"], ["180", "184"], ["178", "184"], ["184", "185"], ["184", "186"], ["182", "189"], ["188", "189"], ["185", "189"], ["182", "191"], ["188", "191"], ["186", "191"], ["191", "193"], ["193", "195"]]}