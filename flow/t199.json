{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 1 0 0 0 0 0 0 0]]"}, {"id": "1", "type": "stmt", "val": "output_grid = `same size as input but all black`(input_grid)"}, {"id": "2", "type": "val", "name": "output_grid", "val": "[[0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}, {"id": "3", "type": "stmt", "val": "(col, ele) = `find the non zero element and return the column of the position and the element`(input_grid)"}, {"id": "4", "type": "val", "name": "col", "val": "2"}, {"id": "5", "type": "val", "name": "ele", "val": "1"}, {"id": "13", "type": "val", "name": "i", "val": "2"}, {"id": "15", "type": "stmt", "val": "output_grid = `if input i minus col is even, replace the i-th column in output_grid with input ele `(output_grid, i, col, ele)"}, {"id": "16", "type": "val", "name": "output_grid", "val": "[[0 0 1 0 0 0 0 0 0 0]\n [0 0 1 0 0 0 0 0 0 0]\n [0 0 1 0 0 0 0 0 0 0]\n [0 0 1 0 0 0 0 0 0 0]\n [0 0 1 0 0 0 0 0 0 0]\n [0 0 1 0 0 0 0 0 0 0]\n [0 0 1 0 0 0 0 0 0 0]\n [0 0 1 0 0 0 0 0 0 0]\n [0 0 1 0 0 0 0 0 0 0]\n [0 0 1 0 0 0 0 0 0 0]]"}, {"id": "17", "type": "stmt", "val": "output_grid = `if input i minus col is 1,5,9 and so on, replace the first element in i-th column in output_grid with grey `(output_grid, i, col)"}, {"id": "18", "type": "stmt", "val": "output_grid = `if input i minus col is 3,7,11 and so on, replace the last element in i-th column in output_grid with grey `(output_grid, i, col)"}, {"id": "20", "type": "val", "name": "i", "val": "3"}, {"id": "22", "type": "stmt", "val": "output_grid = `if input i minus col is even, replace the i-th column in output_grid with input ele `(output_grid, i, col, ele)"}, {"id": "23", "type": "stmt", "val": "output_grid = `if input i minus col is 1,5,9 and so on, replace the first element in i-th column in output_grid with grey `(output_grid, i, col)"}, {"id": "24", "type": "val", "name": "output_grid", "val": "[[0 0 1 5 0 0 0 0 0 0]\n [0 0 1 0 0 0 0 0 0 0]\n [0 0 1 0 0 0 0 0 0 0]\n [0 0 1 0 0 0 0 0 0 0]\n [0 0 1 0 0 0 0 0 0 0]\n [0 0 1 0 0 0 0 0 0 0]\n [0 0 1 0 0 0 0 0 0 0]\n [0 0 1 0 0 0 0 0 0 0]\n [0 0 1 0 0 0 0 0 0 0]\n [0 0 1 0 0 0 0 0 0 0]]"}, {"id": "25", "type": "stmt", "val": "output_grid = `if input i minus col is 3,7,11 and so on, replace the last element in i-th column in output_grid with grey `(output_grid, i, col)"}, {"id": "27", "type": "val", "name": "i", "val": "4"}, {"id": "29", "type": "stmt", "val": "output_grid = `if input i minus col is even, replace the i-th column in output_grid with input ele `(output_grid, i, col, ele)"}, {"id": "30", "type": "val", "name": "output_grid", "val": "[[0 0 1 5 1 0 0 0 0 0]\n [0 0 1 0 1 0 0 0 0 0]\n [0 0 1 0 1 0 0 0 0 0]\n [0 0 1 0 1 0 0 0 0 0]\n [0 0 1 0 1 0 0 0 0 0]\n [0 0 1 0 1 0 0 0 0 0]\n [0 0 1 0 1 0 0 0 0 0]\n [0 0 1 0 1 0 0 0 0 0]\n [0 0 1 0 1 0 0 0 0 0]\n [0 0 1 0 1 0 0 0 0 0]]"}, {"id": "31", "type": "stmt", "val": "output_grid = `if input i minus col is 1,5,9 and so on, replace the first element in i-th column in output_grid with grey `(output_grid, i, col)"}, {"id": "32", "type": "stmt", "val": "output_grid = `if input i minus col is 3,7,11 and so on, replace the last element in i-th column in output_grid with grey `(output_grid, i, col)"}, {"id": "34", "type": "val", "name": "i", "val": "5"}, {"id": "36", "type": "stmt", "val": "output_grid = `if input i minus col is even, replace the i-th column in output_grid with input ele `(output_grid, i, col, ele)"}, {"id": "37", "type": "stmt", "val": "output_grid = `if input i minus col is 1,5,9 and so on, replace the first element in i-th column in output_grid with grey `(output_grid, i, col)"}, {"id": "38", "type": "stmt", "val": "output_grid = `if input i minus col is 3,7,11 and so on, replace the last element in i-th column in output_grid with grey `(output_grid, i, col)"}, {"id": "39", "type": "val", "name": "output_grid", "val": "[[0 0 1 5 1 0 0 0 0 0]\n [0 0 1 0 1 0 0 0 0 0]\n [0 0 1 0 1 0 0 0 0 0]\n [0 0 1 0 1 0 0 0 0 0]\n [0 0 1 0 1 0 0 0 0 0]\n [0 0 1 0 1 0 0 0 0 0]\n [0 0 1 0 1 0 0 0 0 0]\n [0 0 1 0 1 0 0 0 0 0]\n [0 0 1 0 1 0 0 0 0 0]\n [0 0 1 0 1 5 0 0 0 0]]"}, {"id": "41", "type": "val", "name": "i", "val": "6"}, {"id": "43", "type": "stmt", "val": "output_grid = `if input i minus col is even, replace the i-th column in output_grid with input ele `(output_grid, i, col, ele)"}, {"id": "44", "type": "val", "name": "output_grid", "val": "[[0 0 1 5 1 0 1 0 0 0]\n [0 0 1 0 1 0 1 0 0 0]\n [0 0 1 0 1 0 1 0 0 0]\n [0 0 1 0 1 0 1 0 0 0]\n [0 0 1 0 1 0 1 0 0 0]\n [0 0 1 0 1 0 1 0 0 0]\n [0 0 1 0 1 0 1 0 0 0]\n [0 0 1 0 1 0 1 0 0 0]\n [0 0 1 0 1 0 1 0 0 0]\n [0 0 1 0 1 5 1 0 0 0]]"}, {"id": "45", "type": "stmt", "val": "output_grid = `if input i minus col is 1,5,9 and so on, replace the first element in i-th column in output_grid with grey `(output_grid, i, col)"}, {"id": "46", "type": "stmt", "val": "output_grid = `if input i minus col is 3,7,11 and so on, replace the last element in i-th column in output_grid with grey `(output_grid, i, col)"}, {"id": "48", "type": "val", "name": "i", "val": "7"}, {"id": "50", "type": "stmt", "val": "output_grid = `if input i minus col is even, replace the i-th column in output_grid with input ele `(output_grid, i, col, ele)"}, {"id": "51", "type": "stmt", "val": "output_grid = `if input i minus col is 1,5,9 and so on, replace the first element in i-th column in output_grid with grey `(output_grid, i, col)"}, {"id": "52", "type": "val", "name": "output_grid", "val": "[[0 0 1 5 1 0 1 5 0 0]\n [0 0 1 0 1 0 1 0 0 0]\n [0 0 1 0 1 0 1 0 0 0]\n [0 0 1 0 1 0 1 0 0 0]\n [0 0 1 0 1 0 1 0 0 0]\n [0 0 1 0 1 0 1 0 0 0]\n [0 0 1 0 1 0 1 0 0 0]\n [0 0 1 0 1 0 1 0 0 0]\n [0 0 1 0 1 0 1 0 0 0]\n [0 0 1 0 1 5 1 0 0 0]]"}, {"id": "53", "type": "stmt", "val": "output_grid = `if input i minus col is 3,7,11 and so on, replace the last element in i-th column in output_grid with grey `(output_grid, i, col)"}, {"id": "55", "type": "val", "name": "i", "val": "8"}, {"id": "57", "type": "stmt", "val": "output_grid = `if input i minus col is even, replace the i-th column in output_grid with input ele `(output_grid, i, col, ele)"}, {"id": "58", "type": "val", "name": "output_grid", "val": "[[0 0 1 5 1 0 1 5 1 0]\n [0 0 1 0 1 0 1 0 1 0]\n [0 0 1 0 1 0 1 0 1 0]\n [0 0 1 0 1 0 1 0 1 0]\n [0 0 1 0 1 0 1 0 1 0]\n [0 0 1 0 1 0 1 0 1 0]\n [0 0 1 0 1 0 1 0 1 0]\n [0 0 1 0 1 0 1 0 1 0]\n [0 0 1 0 1 0 1 0 1 0]\n [0 0 1 0 1 5 1 0 1 0]]"}, {"id": "59", "type": "stmt", "val": "output_grid = `if input i minus col is 1,5,9 and so on, replace the first element in i-th column in output_grid with grey `(output_grid, i, col)"}, {"id": "60", "type": "stmt", "val": "output_grid = `if input i minus col is 3,7,11 and so on, replace the last element in i-th column in output_grid with grey `(output_grid, i, col)"}, {"id": "62", "type": "val", "name": "i", "val": "9"}, {"id": "64", "type": "stmt", "val": "output_grid = `if input i minus col is even, replace the i-th column in output_grid with input ele `(output_grid, i, col, ele)"}, {"id": "65", "type": "stmt", "val": "output_grid = `if input i minus col is 1,5,9 and so on, replace the first element in i-th column in output_grid with grey `(output_grid, i, col)"}, {"id": "66", "type": "stmt", "val": "output_grid = `if input i minus col is 3,7,11 and so on, replace the last element in i-th column in output_grid with grey `(output_grid, i, col)"}, {"id": "67", "type": "val", "name": "output_grid", "val": "[[0 0 1 5 1 0 1 5 1 0]\n [0 0 1 0 1 0 1 0 1 0]\n [0 0 1 0 1 0 1 0 1 0]\n [0 0 1 0 1 0 1 0 1 0]\n [0 0 1 0 1 0 1 0 1 0]\n [0 0 1 0 1 0 1 0 1 0]\n [0 0 1 0 1 0 1 0 1 0]\n [0 0 1 0 1 0 1 0 1 0]\n [0 0 1 0 1 0 1 0 1 0]\n [0 0 1 0 1 5 1 0 1 5]]"}, {"id": "69", "type": "stmt", "val": "return output_grid"}, {"id": "70", "type": "val", "name": "output", "val": "[[0 0 1 5 1 0 1 5 1 0]\n [0 0 1 0 1 0 1 0 1 0]\n [0 0 1 0 1 0 1 0 1 0]\n [0 0 1 0 1 0 1 0 1 0]\n [0 0 1 0 1 0 1 0 1 0]\n [0 0 1 0 1 0 1 0 1 0]\n [0 0 1 0 1 0 1 0 1 0]\n [0 0 1 0 1 0 1 0 1 0]\n [0 0 1 0 1 0 1 0 1 0]\n [0 0 1 0 1 5 1 0 1 5]]"}], "edges": [["0", "1"], ["1", "2"], ["0", "3"], ["3", "4"], ["3", "5"], ["5", "15"], ["2", "15"], ["13", "15"], ["4", "15"], ["15", "16"], ["4", "17"], ["16", "17"], ["13", "17"], ["4", "18"], ["16", "18"], ["13", "18"], ["5", "22"], ["16", "22"], ["20", "22"], ["4", "22"], ["4", "23"], ["16", "23"], ["20", "23"], ["23", "24"], ["4", "25"], ["24", "25"], ["20", "25"], ["5", "29"], ["24", "29"], ["27", "29"], ["4", "29"], ["29", "30"], ["4", "31"], ["30", "31"], ["27", "31"], ["4", "32"], ["30", "32"], ["27", "32"], ["5", "36"], ["30", "36"], ["34", "36"], ["4", "36"], ["4", "37"], ["30", "37"], ["34", "37"], ["4", "38"], ["30", "38"], ["34", "38"], ["38", "39"], ["5", "43"], ["39", "43"], ["41", "43"], ["4", "43"], ["43", "44"], ["4", "45"], ["44", "45"], ["41", "45"], ["4", "46"], ["44", "46"], ["41", "46"], ["5", "50"], ["44", "50"], ["48", "50"], ["4", "50"], ["4", "51"], ["44", "51"], ["48", "51"], ["51", "52"], ["4", "53"], ["52", "53"], ["48", "53"], ["5", "57"], ["52", "57"], ["55", "57"], ["4", "57"], ["57", "58"], ["4", "59"], ["58", "59"], ["55", "59"], ["4", "60"], ["58", "60"], ["55", "60"], ["5", "64"], ["58", "64"], ["62", "64"], ["4", "64"], ["4", "65"], ["58", "65"], ["62", "65"], ["4", "66"], ["58", "66"], ["62", "66"], ["66", "67"], ["67", "69"], ["69", "70"]]}