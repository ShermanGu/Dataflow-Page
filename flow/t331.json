{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 0 5 0 0 0 5 0 5 0 0 5 0 5 0 0]\n [5 0 5 0 0 5 0 0 5 0 0 5 0 0 0 5 0]\n [0 5 0 0 5 0 5 0 0 0 5 0 0 5 0 0 5]]"}, {"id": "1", "type": "stmt", "val": "output_grid = `same size as input`(input_grid)"}, {"id": "2", "type": "val", "name": "output_grid", "val": "[[0 0 0 5 0 0 0 5 0 5 0 0 5 0 5 0 0]\n [5 0 5 0 0 5 0 0 5 0 0 5 0 0 0 5 0]\n [0 5 0 0 5 0 5 0 0 0 5 0 0 5 0 0 5]]"}, {"id": "4", "type": "val", "name": "i", "val": "0"}, {"id": "5", "type": "stmt", "val": "output_grid = `if i-th colmun to the end colmun of output grid is even, replace grey element in the i-th colmun with green element `(output_grid, i)"}, {"id": "6", "type": "val", "name": "output_grid", "val": "[[0 0 0 5 0 0 0 5 0 5 0 0 5 0 5 0 0]\n [3 0 5 0 0 5 0 0 5 0 0 5 0 0 0 5 0]\n [0 5 0 0 5 0 5 0 0 0 5 0 0 5 0 0 5]]"}, {"id": "8", "type": "val", "name": "i", "val": "1"}, {"id": "9", "type": "stmt", "val": "output_grid = `if i-th colmun to the end colmun of output grid is even, replace grey element in the i-th colmun with green element `(output_grid, i)"}, {"id": "11", "type": "val", "name": "i", "val": "2"}, {"id": "12", "type": "stmt", "val": "output_grid = `if i-th colmun to the end colmun of output grid is even, replace grey element in the i-th colmun with green element `(output_grid, i)"}, {"id": "13", "type": "val", "name": "output_grid", "val": "[[0 0 0 5 0 0 0 5 0 5 0 0 5 0 5 0 0]\n [3 0 3 0 0 5 0 0 5 0 0 5 0 0 0 5 0]\n [0 5 0 0 5 0 5 0 0 0 5 0 0 5 0 0 5]]"}, {"id": "15", "type": "val", "name": "i", "val": "3"}, {"id": "16", "type": "stmt", "val": "output_grid = `if i-th colmun to the end colmun of output grid is even, replace grey element in the i-th colmun with green element `(output_grid, i)"}, {"id": "18", "type": "val", "name": "i", "val": "4"}, {"id": "19", "type": "stmt", "val": "output_grid = `if i-th colmun to the end colmun of output grid is even, replace grey element in the i-th colmun with green element `(output_grid, i)"}, {"id": "20", "type": "val", "name": "output_grid", "val": "[[0 0 0 5 0 0 0 5 0 5 0 0 5 0 5 0 0]\n [3 0 3 0 0 5 0 0 5 0 0 5 0 0 0 5 0]\n [0 5 0 0 3 0 5 0 0 0 5 0 0 5 0 0 5]]"}, {"id": "22", "type": "val", "name": "i", "val": "5"}, {"id": "23", "type": "stmt", "val": "output_grid = `if i-th colmun to the end colmun of output grid is even, replace grey element in the i-th colmun with green element `(output_grid, i)"}, {"id": "25", "type": "val", "name": "i", "val": "6"}, {"id": "26", "type": "stmt", "val": "output_grid = `if i-th colmun to the end colmun of output grid is even, replace grey element in the i-th colmun with green element `(output_grid, i)"}, {"id": "27", "type": "val", "name": "output_grid", "val": "[[0 0 0 5 0 0 0 5 0 5 0 0 5 0 5 0 0]\n [3 0 3 0 0 5 0 0 5 0 0 5 0 0 0 5 0]\n [0 5 0 0 3 0 3 0 0 0 5 0 0 5 0 0 5]]"}, {"id": "29", "type": "val", "name": "i", "val": "7"}, {"id": "30", "type": "stmt", "val": "output_grid = `if i-th colmun to the end colmun of output grid is even, replace grey element in the i-th colmun with green element `(output_grid, i)"}, {"id": "32", "type": "val", "name": "i", "val": "8"}, {"id": "33", "type": "stmt", "val": "output_grid = `if i-th colmun to the end colmun of output grid is even, replace grey element in the i-th colmun with green element `(output_grid, i)"}, {"id": "34", "type": "val", "name": "output_grid", "val": "[[0 0 0 5 0 0 0 5 0 5 0 0 5 0 5 0 0]\n [3 0 3 0 0 5 0 0 3 0 0 5 0 0 0 5 0]\n [0 5 0 0 3 0 3 0 0 0 5 0 0 5 0 0 5]]"}, {"id": "36", "type": "val", "name": "i", "val": "9"}, {"id": "37", "type": "stmt", "val": "output_grid = `if i-th colmun to the end colmun of output grid is even, replace grey element in the i-th colmun with green element `(output_grid, i)"}, {"id": "39", "type": "val", "name": "i", "val": "10"}, {"id": "40", "type": "stmt", "val": "output_grid = `if i-th colmun to the end colmun of output grid is even, replace grey element in the i-th colmun with green element `(output_grid, i)"}, {"id": "41", "type": "val", "name": "output_grid", "val": "[[0 0 0 5 0 0 0 5 0 5 0 0 5 0 5 0 0]\n [3 0 3 0 0 5 0 0 3 0 0 5 0 0 0 5 0]\n [0 5 0 0 3 0 3 0 0 0 3 0 0 5 0 0 5]]"}, {"id": "43", "type": "val", "name": "i", "val": "11"}, {"id": "44", "type": "stmt", "val": "output_grid = `if i-th colmun to the end colmun of output grid is even, replace grey element in the i-th colmun with green element `(output_grid, i)"}, {"id": "46", "type": "val", "name": "i", "val": "12"}, {"id": "47", "type": "stmt", "val": "output_grid = `if i-th colmun to the end colmun of output grid is even, replace grey element in the i-th colmun with green element `(output_grid, i)"}, {"id": "48", "type": "val", "name": "output_grid", "val": "[[0 0 0 5 0 0 0 5 0 5 0 0 3 0 5 0 0]\n [3 0 3 0 0 5 0 0 3 0 0 5 0 0 0 5 0]\n [0 5 0 0 3 0 3 0 0 0 3 0 0 5 0 0 5]]"}, {"id": "50", "type": "val", "name": "i", "val": "13"}, {"id": "51", "type": "stmt", "val": "output_grid = `if i-th colmun to the end colmun of output grid is even, replace grey element in the i-th colmun with green element `(output_grid, i)"}, {"id": "53", "type": "val", "name": "i", "val": "14"}, {"id": "54", "type": "stmt", "val": "output_grid = `if i-th colmun to the end colmun of output grid is even, replace grey element in the i-th colmun with green element `(output_grid, i)"}, {"id": "55", "type": "val", "name": "output_grid", "val": "[[0 0 0 5 0 0 0 5 0 5 0 0 3 0 3 0 0]\n [3 0 3 0 0 5 0 0 3 0 0 5 0 0 0 5 0]\n [0 5 0 0 3 0 3 0 0 0 3 0 0 5 0 0 5]]"}, {"id": "57", "type": "val", "name": "i", "val": "15"}, {"id": "58", "type": "stmt", "val": "output_grid = `if i-th colmun to the end colmun of output grid is even, replace grey element in the i-th colmun with green element `(output_grid, i)"}, {"id": "60", "type": "val", "name": "i", "val": "16"}, {"id": "61", "type": "stmt", "val": "output_grid = `if i-th colmun to the end colmun of output grid is even, replace grey element in the i-th colmun with green element `(output_grid, i)"}, {"id": "62", "type": "val", "name": "output_grid", "val": "[[0 0 0 5 0 0 0 5 0 5 0 0 3 0 3 0 0]\n [3 0 3 0 0 5 0 0 3 0 0 5 0 0 0 5 0]\n [0 5 0 0 3 0 3 0 0 0 3 0 0 5 0 0 3]]"}, {"id": "64", "type": "stmt", "val": "return output_grid"}], "edges": [["0", "1"], ["1", "2"], ["2", "5"], ["4", "5"], ["5", "6"], ["6", "9"], ["8", "9"], ["6", "12"], ["11", "12"], ["12", "13"], ["13", "16"], ["15", "16"], ["13", "19"], ["18", "19"], ["19", "20"], ["20", "23"], ["22", "23"], ["20", "26"], ["25", "26"], ["26", "27"], ["27", "30"], ["29", "30"], ["27", "33"], ["32", "33"], ["33", "34"], ["34", "37"], ["36", "37"], ["34", "40"], ["39", "40"], ["40", "41"], ["41", "44"], ["43", "44"], ["41", "47"], ["46", "47"], ["47", "48"], ["48", "51"], ["50", "51"], ["48", "54"], ["53", "54"], ["54", "55"], ["55", "58"], ["57", "58"], ["55", "61"], ["60", "61"], ["61", "62"], ["62", "64"]]}