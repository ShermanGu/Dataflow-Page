{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 6 6 6 6 0 0 0 0]\n [0 0 0 0 6 0 0 0 0 0 0 0]\n [0 0 6 0 6 0 0 0 0 0 0 0]\n [0 0 6 6 6 6 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]]"}, {"id": "2", "type": "val", "name": "non_black_pixels", "val": "(array([4, 4, 4, 4, 5, 6, 6, 7, 7, 7, 7], dtype=int64), array([4, 5, 6, 7, 4, 2, 4, 2, 3, 4, 5], dtype=int64))"}, {"id": "3", "type": "stmt", "val": "smallest_rect = `find the smallest rectangle that contains these non_black pixels in the input_grid`(non_black_pixels, input_grid)"}, {"id": "6", "type": "val", "name": "output_grid", "val": "[[0 0 6 6 6 6]\n [0 0 6 0 0 0]\n [6 0 6 0 0 0]\n [6 6 6 6 0 0]]"}, {"id": "7", "type": "stmt", "val": "return output_grid"}, {"id": "8", "type": "val", "name": "output", "val": "[[0 0 6 6 6 6]\n [0 0 6 0 0 0]\n [6 0 6 0 0 0]\n [6 6 6 6 0 0]]"}], "edges": [["2", "3"], ["0", "3"], ["6", "7"], ["7", "8"]]}